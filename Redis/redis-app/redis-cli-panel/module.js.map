{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/runtime\"","webpack:///external \"@emotion/css\"","webpack:///external \"rxjs\"","webpack:///./redis-cli-panel/constants.ts","webpack:///./redis-cli-panel/components/AutoScrollingTextArea/AutoScrollingTextArea.tsx","webpack:///./redis-cli-panel/help/redis.ts","webpack:///./redis-cli-panel/help/redis-ai.ts","webpack:///./redis-cli-panel/help/redis-bloom.ts","webpack:///./redis-cli-panel/help/redis-gears.ts","webpack:///./redis-cli-panel/help/redis-graph.ts","webpack:///./redis-cli-panel/help/redis-json.ts","webpack:///./redis-cli-panel/help/redis-search.ts","webpack:///./redis-cli-panel/help/redis-time-series.ts","webpack:///./redis-cli-panel/module.ts","webpack:///./redis-cli-panel/components/RedisCLIPanel/RedisCLIPanel.tsx","webpack:///./redis-cli-panel/styles.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","TypeError","String","__","this","constructor","__assign","assign","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","pop","push","__read","ar","error","__spreadArray","to","from","pack","slice","concat","__makeTemplateObject","cooked","raw","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","ResponseMode","CLITextArea","componentDidMount","element","props","autoScroll","scrollTop","scrollHeight","componentDidUpdate","prevProps","prevState","render","ref","Component","Help","ACL","syntax","summary","since","url","complexity","APPEND","AUTH","BGREWRITEAOF","BGSAVE","BITCOUNT","BITFIELD","BITFIELD_RO","BITOP","BITPOS","BLPOP","BRPOP","BRPOPLPUSH","warning","BLMOVE","BZPOPMIN","BZPOPMAX","CLIENT","CLUSTER","danger","COMMAND","CONFIG","COPY","DBSIZE","DECR","DECRBY","DEL","DISCARD","DUMP","ECHO","EVAL","EVALSHA","EXEC","EXISTS","EXPIRE","EXPIREAT","FAILOVER","FLUSHALL","FLUSHDB","GEOADD","GEOHASH","GEOPOS","GEODIST","GEORADIUS","GEORADIUSBYMEMBER","GEOSEARCH","GEOSEARCHSTORE","GET","GETBIT","GETDEL","GETEX","GETRANGE","GETSET","HDEL","HELLO","HEXISTS","HGET","HGETALL","HINCRBY","HINCRBYFLOAT","HKEYS","HLEN","HMGET","HMSET","HSET","HSETNX","HRANDFIELD","HSTRLEN","HVALS","INCR","INCRBY","INCRBYFLOAT","INFO","LOLWUT","KEYS","LASTSAVE","LINDEX","LINSERT","LLEN","LPOP","LMPOP","BLMPOP","LPOS","LPUSH","LPUSHX","LRANGE","LREM","LSET","LTRIM","MEMORY","MGET","MIGRATE","MODULE","MONITOR","MOVE","MSET","MSETNX","MULTI","OBJECT","PERSIST","PEXPIRE","PEXPIREAT","PFADD","PFCOUNT","PFMERGE","PING","PSETEX","PSUBSCRIBE","PUBSUB","PTTL","PUBLISH","PUNSUBSCRIBE","QUIT","RANDOMKEY","READONLY","READWRITE","RENAME","RENAMENX","RESET","RESTORE","ROLE","RPOP","RPOPLPUSH","LMOVE","RPUSH","RPUSHX","SADD","SAVE","SCARD","SINTERCARD","SCRIPT","SDIFF","SDIFFSTORE","SELECT","SET","SETBIT","SETEX","SETNX","SETRANGE","SHUTDOWN","SINTER","SINTERSTORE","SISMEMBER","SMISMEMBER","SLAVEOF","REPLICAOF","SLOWLOG","SMEMBERS","SMOVE","SORT","SORT_RO","SPOP","SRANDMEMBER","SREM","STRALGO","STRLEN","SUBSCRIBE","SUNION","SUNIONSTORE","SWAPDB","SYNC","PSYNC","TIME","TOUCH","TTL","TYPE","UNSUBSCRIBE","UNLINK","UNWATCH","WAIT","WATCH","ZADD","ZCARD","ZINTERCARD","ZCOUNT","ZDIFF","ZDIFFSTORE","ZINCRBY","ZINTER","ZINTERSTORE","ZLEXCOUNT","ZPOPMAX","ZPOPMIN","ZRANDMEMBER","ZRANGESTORE","ZRANGE","ZRANGEBYLEX","ZREVRANGEBYLEX","ZRANGEBYSCORE","ZRANK","ZREM","ZREMRANGEBYLEX","ZREMRANGEBYRANK","ZREMRANGEBYSCORE","ZREVRANGE","ZREVRANGEBYSCORE","ZREVRANK","ZSCORE","ZUNION","ZMSCORE","ZUNIONSTORE","SCAN","SSCAN","HSCAN","ZSCAN","XINFO","XADD","XTRIM","XDEL","XRANGE","XREVRANGE","XLEN","XREAD","XGROUP","XREADGROUP","XACK","XCLAIM","XAUTOCLAIM","XPENDING","LATENCY","EXPIRETIME","PEXPIRETIME","EVAL_RO","EVALSHA_RO","ZMPOP","BZMPOP","AI","BF","CF","CMS","TOPK","RG","GRAPH","JSON","FT","TS","ResponseModeOptions","CLI","RAW","theme","options","data","width","height","onOptionsChange","replaceVariables","query","output","help","styles","wrapper","textarea","form","isLight","cli","targets","request","datasource","jsonData","getInstanceSettings","cliDisabled","className","id","target","rel","href","placeholder","onChange","event","toUpperCase","q","split","onKeyPress","ds","dsQuery","refId","results","response","message","forEach","item","fields","field","values","toArray","map","join","undefined","variant","onClick"],"mappings":"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","file":"redis-cli-panel/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","import {\n  RedisAIHelp,\n  RedisBloomHelp,\n  RedisGearsHelp,\n  RedisGraphHelp,\n  RedisHelp,\n  RedisJSONHelp,\n  RedisSearchHelp,\n  RedisTimeSeriesHelp,\n} from './help';\nimport { HelpCommand } from './types';\n\n/**\n * Help for native redis commands and modules\n */\nexport const Help: { [key: string]: HelpCommand } = {\n  ...RedisHelp,\n  ...RedisAIHelp,\n  ...RedisBloomHelp,\n  ...RedisGearsHelp,\n  ...RedisGraphHelp,\n  ...RedisJSONHelp,\n  ...RedisSearchHelp,\n  ...RedisTimeSeriesHelp,\n};\n\n/**\n * Response Modes\n */\nexport enum ResponseMode {\n  CLI = 'CLI',\n  RAW = 'Raw',\n}\n\n/**\n * Response Mode options\n */\nexport const ResponseModeOptions = [\n  {\n    label: ResponseMode.CLI,\n    value: ResponseMode.CLI,\n  },\n  {\n    label: ResponseMode.RAW,\n    value: ResponseMode.RAW,\n  },\n];\n","import React from 'react';\nimport { TextArea } from '@grafana/ui';\n\n/**\n * Properties\n */\ntype TextareaProps = React.TextareaHTMLAttributes<HTMLTextAreaElement>;\n\n/**\n * Auto scrolling text area\n */\nexport class AutoScrollingTextArea extends React.Component<TextareaProps & { autoScroll?: boolean }, {}> {\n  element: HTMLTextAreaElement | null | undefined;\n\n  /**\n   * Mount\n   */\n  componentDidMount() {\n    if (this.element && this.props.autoScroll !== false) {\n      this.element.scrollTop = this.element.scrollHeight;\n    }\n  }\n\n  /**\n   * Update\n   *\n   * @param prevProps {TextareaProps}\n   * @param prevState\n   */\n  componentDidUpdate(prevProps: TextareaProps, prevState: {}) {\n    if (prevProps.value !== this.props.value && this.element && this.props.autoScroll !== false) {\n      this.element.scrollTop = this.element.scrollHeight;\n    }\n  }\n\n  /**\n   * Render\n   */\n  render() {\n    return <TextArea {...this.props} ref={(element) => (this.element = element)} />;\n  }\n}\n\nexport const CLITextArea = AutoScrollingTextArea;\n","import { HelpCommand } from '../types';\n\n/**\n * Native Redis commands\n *\n * @see https://redis.io/commands\n * @see https://github.com/redis/redis-doc/blob/master/commands.json\n */\nexport const RedisHelp: { [key: string]: HelpCommand } = {\n  /**\n   * ACL\n   * @see https://redis.io/topics/acl\n   */\n  ACL: {\n    syntax: 'ACL LOAD | SAVE | LIST | USERS | GETUSER | SETUSER | DELUSER | CAT | GENPASS | WHOAMI | LOG | HELP',\n    summary:\n      'The Redis ACL, short for Access Control List, is the feature that allows certain connections to be \\\n      limited in terms of the commands that can be executed and the keys that can be accessed.',\n    since: '6.0.0',\n    url: 'https://redis.io/topics/acl',\n  },\n  'ACL LOAD': {\n    syntax: 'ACL LOAD',\n    summary: 'Reload the ACLs from the configured ACL file.',\n    complexity: 'O(N). Where N is the number of configured users.',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/acl-load',\n  },\n  'ACL SAVE': {\n    syntax: 'ACL SAVE',\n    summary: 'Save the current ACL rules in the configured ACL file.',\n    complexity: 'O(N). Where N is the number of configured users.',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/acl-save',\n  },\n  'ACL LIST': {\n    syntax: 'ACL LIST',\n    summary: 'List the current ACL rules in ACL config file format.',\n    complexity: 'O(N). Where N is the number of configured users.',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/acl-list',\n  },\n  'ACL USERS': {\n    syntax: 'ACL USERS',\n    summary: 'List the username of all the configured ACL rules.',\n    complexity: 'O(N). Where N is the number of configured users.',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/acl-users',\n  },\n  'ACL GETUSER': {\n    syntax: 'ACL GETUSER username',\n    summary: 'Get the rules for a specific ACL user.',\n    complexity: 'O(N). Where N is the number of password, command and pattern rules that the user has.',\n    since: '6.0.0, >= 6.2: Added Pub/Sub channel patterns.',\n    url: 'https://redis.io/commands/acl-getuser',\n  },\n  'ACL SETUSER': {\n    syntax: 'ACL SETUSER username [rule [rule ...]]',\n    summary: 'Modify or create the rules for a specific ACL user.',\n    complexity: 'O(N). Where N is the number of rules provided.',\n    since: '6.0.0, >= 6.2: Added Pub/Sub channel patterns.',\n    url: 'https://redis.io/commands/acl-setuser',\n  },\n  'ACL DELUSER': {\n    syntax: 'ACL DELUSER username [username ...]',\n    summary: 'Remove the specified ACL users and the associated rules.',\n    complexity: 'O(1) amortized time considering the typical user.',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/acl-deluser',\n  },\n  'ACL CAT': {\n    syntax: 'ACL CAT [categoryname]',\n    summary: 'List the ACL categories or the commands inside a category.',\n    complexity: 'O(1) since the categories and commands are a fixed set.',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/acl-cat',\n  },\n  'ACL GENPASS': {\n    syntax: 'ACL GENPASS [bits]',\n    summary: 'Generate a pseudorandom secure password to use for ACL users.',\n    complexity: 'O(1)',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/acl-genpass',\n  },\n  'ACL WHOAMI': {\n    syntax: 'ACL WHOAMI',\n    summary: 'Return the name of the user associated to the current connection.',\n    complexity: 'O(1)',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/acl-whoami',\n  },\n  'ACL LOG': {\n    syntax: 'ACL LOG [count or RESET]',\n    summary: 'List latest events denied because of ACLs in place.',\n    complexity: 'O(N) with N being the number of entries shown.',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/acl-log',\n  },\n  'ACL HELP': {\n    syntax: 'ACL HELP',\n    summary: 'Show helpful text about the different subcommands.',\n    complexity: 'O(1)',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/acl-help',\n  },\n  APPEND: {\n    syntax: 'APPEND key value',\n    summary: 'Append a value to a key.',\n    complexity:\n      'O(1). The amortized time complexity is O(1) assuming the appended value is small and \\\n      the already present value is of any size, since the dynamic string library used by Redis \\\n      will double the free space available on every reallocation.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/append',\n  },\n  AUTH: {\n    syntax: 'AUTH [username] password',\n    summary: 'Authenticate to the server.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/auth',\n  },\n  BGREWRITEAOF: {\n    syntax: 'BGREWRITEAOF',\n    summary: 'Asynchronously rewrite the append-only file.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/bgrewriteaof',\n  },\n  BGSAVE: {\n    syntax: 'BGSAVE [SCHEDULE]',\n    summary: 'Asynchronously save the dataset to disk.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/bgsave',\n  },\n  BITCOUNT: {\n    syntax: 'BITCOUNT key [start end [BYTE|BIT]]',\n    summary: 'Count the number of set bits (population counting) in a string.',\n    complexity: 'O(N)',\n    since: '2.6.0, >= 7.0: Added the BYTE|BIT option.',\n    url: 'https://redis.io/commands/bitcount',\n  },\n  BITFIELD: {\n    syntax:\n      'BITFIELD key [GET type offset] [SET type offset value] [INCRBY type offset increment] [OVERFLOW WRAP|SAT|FAIL]',\n    summary: 'Perform arbitrary bitfield integer operations on strings.',\n    complexity: 'O(1) for each subcommand specified.',\n    since: '3.2.0',\n    url: 'https://redis.io/commands/bitfield',\n  },\n  BITFIELD_RO: {\n    syntax: 'BITFIELD_RO key GET type offset',\n    summary: 'Perform arbitrary bitfield integer operations on strings. Read-only variant of BITFIELD.',\n    complexity: 'O(1) for each subcommand specified.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/bitfield_ro',\n  },\n  BITOP: {\n    syntax: 'BITOP operation destkey key [key ...]',\n    summary: 'Perform bitwise operations between strings.',\n    complexity: 'O(N)',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/bitop',\n  },\n  BITPOS: {\n    syntax: 'BITPOS key bit [start [end [BYTE|BIT]]]',\n    summary: 'Return the position of the first bit set to 1 or 0 in a string.',\n    complexity: 'O(N)',\n    since: '2.8.7, >= 7.0: Added the BYTE|BIT option.',\n    url: 'https://redis.io/commands/bitpos',\n  },\n  BLPOP: {\n    syntax: 'BLPOP key [key ...] timeout',\n    summary: 'Remove and get the first element in a list, or block until one is available.',\n    complexity: 'O(1)',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/blpop',\n  },\n  BRPOP: {\n    syntax: 'BRPOP key [key ...] timeout',\n    summary: 'Remove and get the last element in a list, or block until one is available.',\n    complexity: 'O(1)',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/brpop',\n  },\n  BRPOPLPUSH: {\n    syntax: 'BRPOPLPUSH source destination timeout',\n    summary: 'Pop an element from a list, push it to another list and return it; or block until one is available.',\n    warning: 'As per Redis 6.2.0, BRPOPLPUSH is considered deprecated. Please prefer `BLMOVE` in new code.',\n    complexity: 'O(1)',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/brpoplpush',\n  },\n  BLMOVE: {\n    syntax: 'BLMOVE source destination LEFT|RIGHT LEFT|RIGHT timeout',\n    summary: 'Pop an element from a list, push it to another list and return it; or block until one is available.',\n    complexity: 'O(1)',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/blmove',\n  },\n  BZPOPMIN: {\n    syntax: 'BZPOPMIN key [key ...] timeout',\n    summary:\n      'Remove and return the member with the lowest score from one or more sorted sets, or block until one is available.',\n    complexity: 'O(log(N)) with N being the number of elements in the sorted set.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/bzpopmin',\n  },\n  BZPOPMAX: {\n    syntax: 'BZPOPMAX key [key ...] timeout',\n    summary:\n      'Remove and return the member with the highest score from one or more sorted sets, or block until one is available.',\n    complexity: 'O(log(N)) with N being the number of elements in the sorted set.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/bzpopmax',\n  },\n\n  /**\n   * Client\n   *\n   * @see https://redis.io/topics/client-side-caching\n   */\n  CLIENT: {\n    syntax:\n      'CLIENT CACHING | ID | INFO | KILL | LIST | GETNAME | GETREDIR | UNPAUSE | PAUSE | REPLY | SETNAME | TRACKING | TRACKINGINFO | UNBLOCK',\n    summary: 'Client connections.',\n    url: 'https://redis.io/commands',\n  },\n  'CLIENT CACHING': {\n    syntax: 'CLIENT CACHING YES|NO',\n    summary: 'Instruct the server about tracking or not keys in the next request.',\n    complexity: 'O(1)',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/client-caching',\n  },\n  'CLIENT ID': {\n    syntax: 'CLIENT ID',\n    summary: 'Returns the client ID for the current connection.',\n    complexity: 'O(1)',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/client-id',\n  },\n  'CLIENT INFO': {\n    syntax: 'CLIENT INFO',\n    summary: 'Returns information about the current client connection.',\n    complexity: 'O(1)',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/client-info',\n  },\n  'CLIENT KILL': {\n    syntax:\n      'CLIENT KILL [ip:port] [ID client-id] [TYPE normal|master|slave|pubsub] [USER username] [ADDR ip:port] [SKIPME yes/no]',\n    summary: 'Kill the connection of a client.',\n    complexity: 'O(N) where N is the number of client connections.',\n    since: '2.4.0, >= 6.2: LADDR option.',\n    url: 'https://redis.io/commands/client-kill',\n  },\n  'CLIENT LIST': {\n    syntax: 'CLIENT LIST [TYPE normal|master|replica|pubsub] [ID client-id [client-id ...]]',\n    summary: 'Get the list of client connections.',\n    complexity: 'O(N) where N is the number of client connections.',\n    since: '2.4.0, >= 6.2: Added laddr field and the optional ID filter.',\n    url: 'https://redis.io/commands/client-list',\n  },\n  'CLIENT GETNAME': {\n    syntax: 'CLIENT GETNAME',\n    summary: 'Get the current connection name.',\n    complexity: 'O(1)',\n    since: '2.6.9',\n    url: 'https://redis.io/commands/client-getname',\n  },\n  'CLIENT GETREDIR': {\n    syntax: 'CLIENT GETREDIR',\n    summary: 'Get tracking notifications redirection client ID if any.',\n    complexity: 'O(1)',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/client-getredir',\n  },\n  'CLIENT UNPAUSE': {\n    syntax: 'CLIENT UNPAUSE',\n    summary: 'Resume processing of clients that were paused.',\n    complexity: 'O(1)',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/client-unpause',\n  },\n  'CLIENT PAUSE': {\n    syntax: 'CLIENT PAUSE timeout [WRITE|ALL]',\n    summary: 'Stop processing commands from clients for some time.',\n    complexity: 'O(1)',\n    since: '2.9.50, >= 6.2: CLIENT PAUSE WRITE mode added along with the mode option.',\n    url: 'https://redis.io/commands/client-pause',\n  },\n  'CLIENT REPLY': {\n    syntax: 'CLIENT REPLY ON|OFF|SKIP',\n    summary: 'Instruct the server whether to reply to commands.',\n    complexity: 'O(1)',\n    since: '3.2.0',\n    url: 'https://redis.io/commands/client-reply',\n  },\n  'CLIENT SETNAME': {\n    syntax: 'CLIENT SETNAME connection-name',\n    summary: 'Set the current connection name.',\n    complexity: 'O(1)',\n    since: '2.6.9',\n    url: 'https://redis.io/commands/client-setname',\n  },\n  'CLIENT TRACKING': {\n    syntax:\n      'CLIENT TRACKING ON|OFF [REDIRECT client-id] [PREFIX prefix [PREFIX prefix ...]] [BCAST] [OPTIN] [OPTOUT] [NOLOOP]',\n    summary: 'Enable or disable server assisted client side caching support.',\n    complexity: 'O(1). Some options may introduce additional complexity.',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/client-tracking',\n  },\n  'CLIENT TRACKINGINFO': {\n    syntax: 'CLIENT TRACKINGINFO',\n    summary: 'Return information about server assisted client side caching for the current connection.',\n    complexity: 'O(1)',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/client-trackinginfo',\n  },\n  'CLIENT UNBLOCK': {\n    syntax: 'CLIENT UNBLOCK client-id [TIMEOUT|ERROR]',\n    summary: 'Unblock a client blocked in a blocking command from a different connection.',\n    complexity: 'O(log N) where N is the number of client connections.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/client-unblock',\n  },\n\n  /**\n   * Cluster\n   *\n   * @see https://redis.io/topics/cluster-spec\n   */\n  CLUSTER: {\n    syntax:\n      'CLUSTER ADDSLOTS | ADDSLOTSRANGE | BUMPEPOCH | COUNT-FAILURE-REPORTS | COUNTKEYSINSLOT | DELSLOTS | DELSLOTSRANGE \\\n      | FAILOVER | FLUSHSLOTS | FORGET | GETKEYSINSLOT | INFO | KEYSLOT | MEET | MYID | NODES | REPLICATE | RESET \\\n      | SAVECONFIG | SET-CONFIG-EPOCH | SETSLOT | SLAVES | REPLICAS | SLOTS',\n    summary: 'Redis Cluster is a distributed implementation of Redis.',\n    since: '3.0.0',\n    url: 'https://redis.io/topics/cluster-spec',\n  },\n  'CLUSTER ADDSLOTS': {\n    syntax: 'CLUSTER ADDSLOTS slot [slot ...]',\n    summary: 'Assign new hash slots to receiving node.',\n    complexity: 'O(N) where N is the total number of hash slot arguments.',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-addslots',\n  },\n  'CLUSTER ADDSLOTSRANGE': {\n    syntax: 'CLUSTER ADDSLOTSRANGE start-slot end-slot [start-slot end-slot ...]',\n    summary:\n      'The CLUSTER ADDSLOTSRANGE is similar to the CLUSTER ADDSLOTS command in that they both assign hash slots to nodes.',\n    complexity: 'O(N) where N is the total number of the slots between the start slot and end slot arguments.',\n    since: '7.0.0',\n    url: 'https://redis.io/commands/cluster-addslotsrange',\n  },\n  'CLUSTER BUMPEPOCH': {\n    syntax: 'CLUSTER BUMPEPOCH',\n    summary: 'Advance the cluster config epoch.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-bumpepoch',\n  },\n  'CLUSTER COUNT-FAILURE-REPORTS': {\n    syntax: 'CLUSTER COUNT-FAILURE-REPORTS node-id',\n    summary: 'Return the number of failure reports active for a given node.',\n    complexity: 'O(N) where N is the number of failure reports.',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-count-failure-reports',\n  },\n  'CLUSTER COUNTKEYSINSLOT': {\n    syntax: 'CLUSTER COUNTKEYSINSLOT slot',\n    summary: 'Return the number of local keys in the specified hash slot.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-countkeysinslot',\n  },\n  'CLUSTER DELSLOTS': {\n    syntax: 'CLUSTER DELSLOTS slot [slot ...]',\n    summary: 'Set hash slots as unbound in receiving node.',\n    complexity: 'O(N) where N is the total number of hash slot arguments.',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-delslots',\n  },\n  'CLUSTER DELSLOTSRANGE': {\n    syntax: 'CLUSTER DELSLOTSRANGE start-slot end-slot [start-slot end-slot ...]',\n    summary:\n      'The CLUSTER DELSLOTSRANGE command is similar to the CLUSTER DELSLOTS command in that they both remove hash slots from the node.',\n    complexity: 'O(N) where N is the total number of the slots between the start slot and end slot arguments.',\n    since: '7.0.0',\n    url: 'https://redis.io/commands/cluster-delslotsrange',\n  },\n  'CLUSTER FAILOVER': {\n    syntax: 'CLUSTER FAILOVER [FORCE|TAKEOVER]',\n    summary: 'Forces a replica to perform a manual failover of its master.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-failover',\n  },\n  'CLUSTER FLUSHSLOTS': {\n    syntax: 'CLUSTER FLUSHSLOTS',\n    summary: \"Delete a node's own slots information.\",\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-flushslots',\n  },\n  'CLUSTER FORGET': {\n    syntax: 'CLUSTER FORGET node-id',\n    summary: 'Remove a node from the nodes table.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-forget',\n  },\n  'CLUSTER GETKEYSINSLOT': {\n    syntax: 'CLUSTER GETKEYSINSLOT slot count',\n    summary: 'Return local key names in the specified hash slot.',\n    complexity: 'O(log(N)) where N is the number of requested keys.',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-getkeysinslot',\n  },\n  'CLUSTER INFO': {\n    syntax: 'CLUSTER INFO',\n    summary: 'Provides info about Redis Cluster node state.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-info',\n  },\n  'CLUSTER KEYSLOT': {\n    syntax: 'CLUSTER KEYSLOT key',\n    summary: 'Returns the hash slot of the specified key.',\n    complexity: 'O(N) where N is the number of bytes in the key.',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-keyslot',\n  },\n  'CLUSTER MEET': {\n    syntax: 'CLUSTER MEET ip port',\n    summary: 'Force a node cluster to handshake with another node.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-meet',\n  },\n  'CLUSTER MYID': {\n    syntax: 'CLUSTER MYID',\n    summary: 'Return the node id.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-myid',\n  },\n  'CLUSTER NODES': {\n    syntax: 'CLUSTER NODES',\n    summary: 'Get Cluster config for the node.',\n    complexity: 'O(N) where N is the total number of Cluster nodes.',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-nodes',\n  },\n  'CLUSTER REPLICATE': {\n    syntax: 'CLUSTER REPLICATE node-id',\n    summary: 'Reconfigure a node as a replica of the specified master node.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-replicate',\n  },\n  'CLUSTER RESET': {\n    syntax: 'CLUSTER RESET [HARD|SOFT]',\n    summary: 'Reset a Redis Cluster node.',\n    danger: 'The command may execute a FLUSHALL as a side effect.',\n    complexity: 'O(N) where N is the number of known nodes.',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-reset',\n  },\n  'CLUSTER SAVECONFIG': {\n    syntax: 'CLUSTER SAVECONFIG',\n    summary: 'Forces the node to save cluster state on disk.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-saveconfig',\n  },\n  'CLUSTER SET-CONFIG-EPOCH': {\n    syntax: 'CLUSTER SET-CONFIG-EPOCH config-epoch',\n    summary: 'Set the configuration epoch in a new node.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-set-config-epoch',\n  },\n  'CLUSTER SETSLOT': {\n    syntax: 'CLUSTER SETSLOT slot IMPORTING|MIGRATING|STABLE|NODE [node-id]',\n    summary: 'Bind a hash slot to a specific node.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-setslot',\n  },\n  'CLUSTER SLAVES': {\n    syntax: 'CLUSTER SLAVES node-id',\n    summary: 'List replica nodes of the specified master node.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-slaves',\n  },\n  'CLUSTER REPLICAS': {\n    syntax: 'CLUSTER REPLICAS node-id',\n    summary: 'List replica nodes of the specified master node.',\n    complexity: 'O(1)',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/cluster-replicas',\n  },\n  'CLUSTER SLOTS': {\n    syntax: 'CLUSTER SLOTS',\n    summary: 'Get array of Cluster slot to node mappings.',\n    complexity: 'O(N) where N is the total number of Cluster nodes.',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/cluster-slots',\n  },\n\n  /**\n   * Command\n   */\n  COMMAND: {\n    syntax: 'COMMAND',\n    summary: 'Get array of Redis command details.',\n    complexity: 'O(N) where N is the total number of Redis commands.',\n    since: '2.8.13',\n    url: 'https://redis.io/commands/command',\n  },\n  'COMMAND COUNT': {\n    syntax: 'COMMAND COUNT',\n    summary: 'Get total number of Redis commands.',\n    complexity: 'O(1)',\n    since: '2.8.13',\n    url: 'https://redis.io/commands/command-count',\n  },\n  'COMMAND GETKEYS': {\n    syntax: 'COMMAND GETKEYS',\n    summary: 'Extract keys given a full Redis command.',\n    complexity: 'O(N) where N is the number of arguments to the command.',\n    since: '2.8.13',\n    url: 'https://redis.io/commands/command-getkeys',\n  },\n  'COMMAND INFO': {\n    syntax: 'COMMAND INFO command-name [command-name ...]',\n    summary: 'Get array of specific Redis command details.',\n    complexity: 'O(N) when N is number of commands to look up.',\n    since: '2.8.13',\n    url: 'https://redis.io/commands/command-info',\n  },\n\n  /**\n   * Config\n   */\n  CONFIG: {\n    syntax: 'CONFIG GET | REWRITE | SET | RESETSTAT',\n    summary: 'Configuration related commands.',\n    since: '2.0.0',\n    url: 'https://redis.io/topics/config',\n  },\n  'CONFIG GET': {\n    syntax: 'CONFIG GET parameter',\n    summary: 'Get the value of a configuration parameter.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/config-get',\n  },\n  'CONFIG REWRITE': {\n    syntax: 'CONFIG REWRITE',\n    summary: 'Rewrite the configuration file with the in memory configuration.',\n    since: '2.8.0',\n    url: 'https://redis.io/commands/config-rewrite',\n  },\n  'CONFIG SET': {\n    syntax: 'CONFIG SET parameter value',\n    summary: 'Set a configuration parameter to the given value.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/config-set',\n  },\n  'CONFIG RESETSTAT': {\n    syntax: 'CONFIG RESETSTAT',\n    summary: 'Reset the stats returned by INFO.',\n    complexity: 'O(1)',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/config-resetstat',\n  },\n  COPY: {\n    syntax: 'COPY source destination [DB destination-db] [REPLACE]',\n    summary: 'Copy a key.',\n    complexity: 'O(N) worst case for collections, where N is the number of nested items. O(1) for string values.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/copy',\n  },\n  DBSIZE: {\n    syntax: 'DBSIZE',\n    summary: 'Return the number of keys in the selected database.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/dbsize',\n  },\n  'DEBUG OBJECT': {\n    syntax: 'DEBUG OBJECT key',\n    summary: 'Get debugging information about a key.',\n    warning: 'Debugging command that should not be used by clients.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/debug-object',\n  },\n  'DEBUG SEGFAULT': {\n    syntax: 'DEBUG SEGFAULT',\n    summary: 'Make the server crash.',\n    danger: 'Performs an invalid memory access that crashes Redis.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/debug-segfault',\n  },\n  DECR: {\n    syntax: 'DECR key',\n    summary: 'Decrement the integer value of a key by one.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/decr',\n  },\n  DECRBY: {\n    syntax: 'DECRBY key decrement',\n    summary: 'Decrement the integer value of a key by the given number.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/decrby',\n  },\n  DEL: {\n    syntax: 'DEL key [key ...]',\n    summary: 'Delete a key.',\n    complexity:\n      'O(N) where N is the number of keys that will be removed. When a key to remove holds a value \\\n      other than a string, the individual complexity for this key is O(M) where M is the number of elements \\\n      in the list, set, sorted set or hash. Removing a single key that holds a string value is O(1).',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/del',\n  },\n  DISCARD: {\n    syntax: 'DISCARD',\n    summary: 'Discard all commands issued after MULTI.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/discard',\n  },\n  DUMP: {\n    syntax: 'DUMP key',\n    summary: 'Return a serialized version of the value stored at the specified key.',\n    complexity:\n      'O(1) to access the key and additional O(N*M) to serialize it, where N is the number of \\\n      Redis objects composing the value and M their average size. For small string values the time \\\n      complexity is thus O(1)+O(1*M) where M is small, so simply O(1).',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/dump',\n  },\n  ECHO: {\n    syntax: 'ECHO message',\n    summary: 'Echo the given string.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/echo',\n  },\n  EVAL: {\n    syntax: 'EVAL script numkeys key [key ...] arg [arg ...]',\n    summary: 'Execute a Lua script server side.',\n    complexity: 'Depends on the script that is executed.',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/eval',\n  },\n  EVALSHA: {\n    syntax: 'EVALSHA sha1 numkeys key [key ...] arg [arg ...]',\n    summary: 'Execute a Lua script server side.',\n    complexity: 'Depends on the script that is executed.',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/evalsha',\n  },\n  EXEC: {\n    syntax: 'EXEC',\n    summary: 'Execute all commands issued after MULTI.',\n    since: '1.2.0',\n    url: 'https://redis.io/commands/exec',\n  },\n  EXISTS: {\n    syntax: 'EXISTS key [key ...]',\n    summary: 'Determine if a key exists.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/exists',\n  },\n  EXPIRE: {\n    syntax: 'EXPIRE key seconds [NX|XX|GT|LT]',\n    summary: \"Set a key's time to live in seconds.\",\n    complexity: 'O(1)',\n    since: '1.0.0, >= 7.0: Added options: NX, XX, GT and LT.',\n    url: 'https://redis.io/commands/expire',\n  },\n  EXPIREAT: {\n    syntax: 'EXPIREAT key timestamp [NX|XX|GT|LT]',\n    summary: 'Set the expiration for a key as a UNIX timestamp.',\n    complexity: 'O(1)',\n    since: '1.2.0, >= 7.0: Added options: NX, XX, GT and LT.',\n    url: 'https://redis.io/commands/expireat',\n  },\n  FAILOVER: {\n    syntax: 'FAILOVER [TO host port [FORCE]] [ABORT] [TIMEOUT milliseconds]',\n    summary: 'Start a coordinated failover between this server and one of its replicas.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/failover',\n  },\n  FLUSHALL: {\n    syntax: 'FLUSHALL [ASYNC|SYNC]',\n    summary: 'Remove all keys from all databases.',\n    complexity: 'O(N) where N is the number of keys in the selected database.',\n    danger: 'May cause data loss in Production environment.',\n    since: '1.0.0, >= 6.2.0: Added the ASYNC and SYNC flushing mode modifiers.',\n    url: 'https://redis.io/commands/flushall',\n  },\n  FLUSHDB: {\n    syntax: 'FLUSHDB [ASYNC|SYNC]',\n    summary: 'Remove all keys from the current database.',\n    complexity: 'O(N) where N is the number of keys in the selected database.',\n    danger: 'May cause data loss in Production environment.',\n    since: '1.0.0, >= 6.2.0: Added the ASYNC and SYNC flushing mode modifiers.',\n    url: 'https://redis.io/commands/flushdb',\n  },\n\n  /**\n   * Geospatial\n   */\n  GEOADD: {\n    syntax: 'GEOADD key [NX|XX] [CH] longitude latitude member [longitude latitude member ...]',\n    summary: 'Add one or more geospatial items in the geospatial index represented using a sorted set.',\n    complexity: 'O(log(N)) for each item added, where N is the number of elements in the sorted set.',\n    since: '3.2.0, >= 6.2: Added the CH, NX and XX options.',\n    url: 'https://redis.io/commands/geoadd',\n  },\n  GEOHASH: {\n    syntax: 'GEOHASH key member [member ...]',\n    summary: 'Returns members of a geospatial index as standard geohash strings.',\n    complexity: 'O(log(N)) for each member requested, where N is the number of elements in the sorted set.',\n    since: '3.2.0',\n    url: 'https://redis.io/commands/geohash',\n  },\n  GEOPOS: {\n    syntax: 'GEOPOS key member [member ...]',\n    summary: 'Returns longitude and latitude of members of a geospatial index.',\n    complexity: 'O(log(N)) for each member requested, where N is the number of elements in the sorted set.',\n    since: '3.2.0',\n    url: 'https://redis.io/commands/geopos',\n  },\n  GEODIST: {\n    syntax: 'GEODIST key member1 member2 [m|km|ft|mi]',\n    summary: 'Returns the distance between two members of a geospatial index.',\n    complexity: 'O(log(N))',\n    since: '3.2.0',\n    url: 'https://redis.io/commands/geodist',\n  },\n  GEORADIUS: {\n    syntax:\n      'GEORADIUS key longitude latitude radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] \\\n      [COUNT count [ANY]] [ASC|DESC] [STORE key] [STOREDIST key]',\n    summary:\n      'Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a point.',\n    complexity:\n      'O(N+log(M)) where N is the number of elements inside the bounding box of the circular area delimited \\\n      by center and radius and M is the number of items inside the index.',\n    warning:\n      'As per Redis 6.2.0, GEORADIUS command family are considered deprecated. Please prefer `GEOSEARCH` and `GEOSEARCHSTORE` in new code.',\n    since: '3.2.0, >= 6.2: Added the ANY option for COUNT.',\n    url: 'https://redis.io/commands/georadius',\n  },\n  GEORADIUSBYMEMBER: {\n    syntax:\n      'GEORADIUSBYMEMBER key member radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] \\\n      [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]',\n    summary:\n      'Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a member.',\n    complexity:\n      'O(N+log(M)) where N is the number of elements inside the bounding box of the circular area delimited by center \\\n      and radius and M is the number of items inside the index.',\n    warning:\n      'As per Redis 6.2.0, GEORADIUS command family are considered deprecated. Please prefer `GEOSEARCH` and `GEOSEARCHSTORE` in new code.',\n    since: '3.2.0',\n    url: 'https://redis.io/commands/georadiusbymember',\n  },\n  GEOSEARCH: {\n    syntax:\n      'GEOSEARCH key [FROMMEMBER member] [FROMLONLAT longitude latitude] [BYRADIUS radius m|km|ft|mi] \\\n      [BYBOX width height m|km|ft|mi] [ASC|DESC] [COUNT count [ANY]] [WITHCOORD] [WITHDIST] [WITHHASH]',\n    summary:\n      'Query a sorted set representing a geospatial index to fetch members inside an area of a box or a circle. \\\n    This command comes in place of the now deprecated `GEORADIUS` and `GEORADIUSBYMEMBER`.',\n    complexity:\n      'O(N+log(M)) where N is the number of elements in the grid-aligned bounding box area around the shape provided as the filter and M is the number of items inside the shape.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/geosearch',\n  },\n  GEOSEARCHSTORE: {\n    syntax:\n      'GEOSEARCHSTORE destination source [FROMMEMBER member] [FROMLONLAT longitude latitude] [BYRADIUS radius m|km|ft|mi] \\\n      [BYBOX width height m|km|ft|mi] [ASC|DESC] [COUNT count [ANY]] [WITHCOORD] [WITHDIST] [WITHHASH] [STOREDIST]',\n    summary:\n      'Query a sorted set representing a geospatial index to fetch members inside an area of a box or a circle, and store the result in another key. \\\n      This command comes in place of the now deprecated `GEORADIUS` and `GEORADIUSBYMEMBER`.',\n    complexity:\n      'O(N+log(M)) where N is the number of elements in the grid-aligned bounding box area around the shape provided as the filter and M is the number of items inside the shape.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/geosearchstore',\n  },\n  GET: {\n    syntax: 'GET key',\n    summary: 'Get the value of a key.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/get',\n  },\n  GETBIT: {\n    syntax: 'GETBIT key offset',\n    summary: 'Returns the bit value at offset in the string value stored at key.',\n    complexity: 'O(1)',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/getbit',\n  },\n  GETDEL: {\n    syntax: 'GETDEL key',\n    summary: 'Get the value of a key and delete the key.',\n    complexity: 'O(1)',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/getdel',\n  },\n  GETEX: {\n    syntax: 'GETEX key [EX seconds|PX milliseconds|EXAT timestamp|PXAT milliseconds-timestamp|PERSIST]',\n    summary: 'Get the value of a key and optionally set its expiration.',\n    complexity: 'O(1)',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/getex',\n  },\n  GETRANGE: {\n    syntax: 'GETRANGE key start end',\n    summary: 'Get a substring of the string stored at a key.',\n    complexity:\n      'O(N) where N is the length of the returned string. The complexity is ultimately determined \\\n      by the returned length, but because creating a substring from an existing string is very cheap, \\\n      it can be considered O(1) for small strings.',\n    since: '2.4.0',\n    url: 'https://redis.io/commands/getrange',\n  },\n  GETSET: {\n    syntax: 'GETSET key value',\n    summary: 'Set the string value of a key and return its old value.',\n    complexity: 'O(1)',\n    warning: 'As per Redis 6.2, GETSET is considered deprecated. Please prefer `SET` with `GET` parameter in new code.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/getset',\n  },\n  HDEL: {\n    syntax: 'HDEL key field [field ...]',\n    summary: 'Delete one or more hash fields.',\n    complexity: 'O(N) where N is the number of fields to be removed.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hdel',\n  },\n  HELLO: {\n    syntax: 'HELLO [protover [AUTH username password] [SETNAME clientname]]',\n    summary: 'Handshake with Redis.',\n    complexity: 'O(1)',\n    since:\n      \"6.0.0, >= 6.2: protover made optional; when called without arguments the command reports the current connection's context.\",\n    url: 'https://redis.io/commands/hello',\n  },\n  HEXISTS: {\n    syntax: 'HEXISTS key field',\n    summary: 'Determine if a hash field exists.',\n    complexity: 'O(1)',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hexists',\n  },\n  HGET: {\n    syntax: 'HGET key field',\n    summary: 'Get the value of a hash field.',\n    complexity: 'O(1)',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hget',\n  },\n  HGETALL: {\n    syntax: 'HGETALL key',\n    summary: 'Get all the fields and values in a hash.',\n    complexity: 'O(N) where N is the size of the hash.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hgetall',\n  },\n  HINCRBY: {\n    syntax: 'HINCRBY key field increment',\n    summary: 'Increment the integer value of a hash field by the given number.',\n    complexity: 'O(1)',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hincrby',\n  },\n  HINCRBYFLOAT: {\n    syntax: 'HINCRBYFLOAT key field increment',\n    summary: 'Increment the float value of a hash field by the given amount.',\n    complexity: 'O(1)',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/hincrbyfloat',\n  },\n  HKEYS: {\n    syntax: 'HKEYS key',\n    summary: 'Get all the fields in a hash.',\n    complexity: 'O(N) where N is the size of the hash.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hkeys',\n  },\n  HLEN: {\n    syntax: 'HLEN key',\n    summary: 'Get the number of fields in a hash.',\n    complexity: 'O(1)',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hlen',\n  },\n  HMGET: {\n    syntax: 'HMGET key field [field ...]',\n    summary: 'Get the values of all the given hash fields.',\n    complexity: 'O(N) where N is the number of fields being requested.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hmget',\n  },\n  HMSET: {\n    syntax: 'HMSET key field value [field value ...]',\n    summary: 'Set multiple hash fields to multiple values.',\n    complexity: 'O(N) where N is the number of fields being set.',\n    warning: 'As per Redis 4.0.0, HMSET is considered deprecated. Please prefer `HSET` in new code.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hmset',\n  },\n  HSET: {\n    syntax: 'HSET key field value [field value ...]',\n    summary: 'Set the string value of a hash field.',\n    complexity:\n      'O(1) for each field/value pair added, so O(N) to add N field/value pairs when the \\\n      command is called with multiple field/value pairs.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hset',\n  },\n  HSETNX: {\n    syntax: 'HSETNX key field value',\n    summary: 'Set the value of a hash field, only if the field does not exist.',\n    complexity: 'O(1)',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hsetnx',\n  },\n  HRANDFIELD: {\n    syntax: 'HRANDFIELD key [count [WITHVALUES]]',\n    summary: 'Get one or multiple random fields from a hash.',\n    complexity: 'O(N) where N is the number of fields returned.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/hrandfield',\n  },\n  HSTRLEN: {\n    syntax: 'HSTRLEN key field',\n    summary: 'Get the length of the value of a hash field.',\n    complexity: 'O(1)',\n    since: '3.2.0',\n    url: 'https://redis.io/commands/hstrlen',\n  },\n  HVALS: {\n    syntax: 'HVALS key',\n    summary: 'Get all the values in a hash.',\n    complexity: 'O(N) where N is the size of the hash.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/hvals',\n  },\n  INCR: {\n    syntax: 'INCR key',\n    summary: 'Increment the integer value of a key by one.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/incr',\n  },\n  INCRBY: {\n    syntax: 'INCRBY key increment',\n    summary: 'Increment the integer value of a key by the given amount.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/incrby',\n  },\n  INCRBYFLOAT: {\n    syntax: 'INCRBYFLOAT key increment',\n    summary: 'Increment the float value of a key by the given amount.',\n    complexity: 'O(1)',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/incrbyfloat',\n  },\n  INFO: {\n    syntax: 'INFO [section]',\n    summary:\n      'Get information and statistics about the server: SERVER (General information about the Redis server), \\\n    CLIENTS (Client connections), MEMORY (Memory consumption), PERSISTENCE (RDB and AOF), STATS (General statistics), \\\n    REPLICATION (Master/replica replication information), CPU (CPU consumption), COMMANDSTATS (Command statistics), \\\n    CLUSTER (Redis Cluster), MODULES (Modules), KEYSPACE (Database related statistics), ERRORSTATS (Redis error statistics)',\n    since: '1.0.0, >=6.2 Added ERRORSTATS and updated COMMANDSTATS.',\n    url: 'https://redis.io/commands/info',\n  },\n  LOLWUT: {\n    syntax: 'LOLWUT [VERSION version]',\n    summary: 'Display some computer art and the Redis version.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/lolwut',\n  },\n  KEYS: {\n    syntax: 'KEYS pattern',\n    summary: 'Find all keys matching the given pattern.',\n    warning:\n      'Consider KEYS as a command that should only be used in production environments with extreme care. This command is \\\n      intended for debugging and special operations, such as changing your keyspace layout.',\n    complexity:\n      'O(N) with N being the number of keys in the database, under the assumption that the key names \\\n      in the database and the given pattern have limited length.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/keys',\n  },\n  LASTSAVE: {\n    syntax: 'LASTSAVE',\n    summary: 'Get the UNIX time stamp of the last successful save to disk.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/lastsave',\n  },\n  LINDEX: {\n    syntax: 'LINDEX key index',\n    summary: 'Get an element from a list by its index.',\n    complexity:\n      'O(N) where N is the number of elements to traverse to get to the element at index. This makes asking for \\\n      the first or the last element of the list O(1).',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/lindex',\n  },\n  LINSERT: {\n    syntax: 'LINSERT key BEFORE|AFTER pivot element',\n    summary: 'Insert an element before or after another element in a list.',\n    complexity:\n      'O(N) where N is the number of elements to traverse before seeing the value pivot. This means that inserting \\\n      somewhere on the left end on the list (head) can be considered O(1) and inserting somewhere on the right \\\n      end (tail) is O(N).',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/linsert',\n  },\n  LLEN: {\n    syntax: 'LLEN key',\n    summary: 'Get the length of a list.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/llen',\n  },\n  LPOP: {\n    syntax: 'LPOP key [count]',\n    summary: 'Remove and get the first element in a list.',\n    complexity: 'O(N) where N is the number of elements returned.',\n    since: '1.0.0, >= 6.2: Added the count argument.',\n    url: 'https://redis.io/commands/lpop',\n  },\n  LMPOP: {\n    syntax: 'LMPOP numkeys key [key ...] LEFT|RIGHT [COUNT count]',\n    summary: 'Pop elements from a list.',\n    complexity: 'O(N+M) where N is the number of provided keys and M is the number of elements returned.',\n    since: '7.0.0',\n    url: 'https://redis.io/commands/lmpop',\n  },\n  BLMPOP: {\n    syntax: 'BLMPOP timeout numkeys key [key ...] LEFT|RIGHT [COUNT count]',\n    summary: 'Pop elements from a list, or block until one is available.',\n    complexity: 'O(N+M) where N is the number of provided keys and M is the number of elements returned.',\n    since: '7.0.0',\n    url: 'https://redis.io/commands/blmpop',\n  },\n  LPOS: {\n    syntax: 'LPOS key element [RANK rank] [COUNT num-matches] [MAXLEN len]',\n    summary: 'Return the index of matching elements on a list.',\n    complexity:\n      'O(N) where N is the number of elements in the list, for the average case. When searching \\\n      for elements near the head or the tail of the list, or when the MAXLEN option is provided, \\\n      the command may run in constant time.',\n    since: '6.0.6',\n    url: 'https://redis.io/commands/lpos',\n  },\n  LPUSH: {\n    syntax: 'LPUSH key element [element ...]',\n    summary: 'Prepend one or multiple elements to a list.',\n    complexity:\n      'O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/lpush',\n  },\n  LPUSHX: {\n    syntax: 'LPUSHX key element [element ...]',\n    summary: 'Prepend an element to a list, only if the list exists.',\n    complexity:\n      'O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/lpushx',\n  },\n  LRANGE: {\n    syntax: 'LRANGE key start stop',\n    summary: 'Get a range of elements from a list.',\n    complexity:\n      'O(S+N) where S is the distance of start offset from HEAD for small lists, from nearest \\\n      end (HEAD or TAIL) for large lists; and N is the number of elements in the specified range.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/lrange',\n  },\n  LREM: {\n    syntax: 'LREM key count element',\n    summary: 'Remove elements from a list.',\n    complexity: 'O(N+M) where N is the length of the list and M is the number of elements removed.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/lrem',\n  },\n  LSET: {\n    syntax: 'LSET key index element',\n    summary: 'Set the value of an element in a list by its index.',\n    complexity:\n      'O(N) where N is the length of the list. Setting either the first or the last element of the list is O(1).',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/lset',\n  },\n  LTRIM: {\n    syntax: 'LTRIM key start stop',\n    summary: 'Trim a list to the specified range.',\n    complexity: 'O(N) where N is the number of elements to be removed by the operation.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/ltrim',\n  },\n  MEMORY: {\n    syntax: 'MEMORY DOCTOR | HELP | MALLOC-STATS | PURGE | STATS | USAGE',\n    summary: 'Memory related commands.',\n    since: '4.0.0',\n    url: 'https://redis.io/topics/memory-optimization',\n  },\n  'MEMORY DOCTOR': {\n    syntax: 'MEMORY DOCTOR',\n    summary: 'Outputs memory problems report.',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/memory-doctor',\n  },\n  'MEMORY HELP': {\n    syntax: 'MEMORY HELP',\n    summary: 'Show helpful text about the different subcommands.',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/memory-help',\n  },\n  'MEMORY MALLOC-STATS': {\n    syntax: 'MEMORY MALLOC-STATS',\n    summary: 'Show allocator internal stats.',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/memory-malloc-stats',\n  },\n  'MEMORY PURGE': {\n    syntax: 'MEMORY PURGE',\n    summary: 'Ask the allocator to release memory.',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/memory-purge',\n  },\n  'MEMORY STATS': {\n    syntax: 'MEMORY STATS',\n    summary: 'Show memory usage details.',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/memory-stats',\n  },\n  'MEMORY USAGE': {\n    syntax: 'MEMORY USAGE key [SAMPLES count]',\n    summary: 'Estimate the memory usage of a key.',\n    complexity: 'O(N) where N is the number of samples.',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/memory-usage',\n  },\n  MGET: {\n    syntax: 'MGET key [key ...]',\n    summary: 'Get the values of all the given keys.',\n    complexity: 'O(N) where N is the number of keys to retrieve.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/mget',\n  },\n  MIGRATE: {\n    syntax:\n      'MIGRATE host port key|\"\" destination-db timeout [COPY] [REPLACE] [AUTH password] [AUTH2 username password] [KEYS key [key ...]]',\n    summary: 'Atomically transfer a key from a Redis instance to another one.',\n    complexity:\n      'This command actually executes a DUMP+DEL in the source instance, and a RESTORE \\\n      in the target instance. See the pages of these commands for time complexity. Also an O(N) \\\n      data transfer between the two instances is performed.',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/migrate',\n  },\n\n  /**\n   * Module\n   * @see https://redis.io/topics/modules-intro\n   */\n  MODULE: {\n    syntax: 'MODULE LIST | LOAD | UNLOAD',\n    summary:\n      'Redis modules make possible to extend Redis functionality using external modules, \\\n    implementing new Redis commands at a speed and with features similar to what can be done inside the core itself.',\n    complexity: 'O(N) where N is the number of loaded modules.',\n    since: '4.0.0',\n    url: 'https://redis.io/topics/modules-intro',\n  },\n  'MODULE LIST': {\n    syntax: 'MODULE LIST',\n    summary: 'List all modules loaded by the server.',\n    complexity: 'O(N) where N is the number of loaded modules.',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/module-list',\n  },\n  'MODULE LOAD': {\n    syntax: 'MODULE LOAD path [ arg [arg ...]]',\n    summary: 'Load a module.',\n    complexity: 'O(1)',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/module-load',\n  },\n  'MODULE UNLOAD': {\n    syntax: 'MODULE UNLOAD name',\n    summary: 'Unload a module.',\n    complexity: 'O(1)',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/module-unload',\n  },\n  MONITOR: {\n    syntax: 'MONITOR',\n    summary: 'Listen for all requests received by the server in real time.',\n    since: '1.0.0, >= 6.2: RESET can be called to exit monitor mode.',\n    danger: 'COMMAND IS NOT SUPPORTED AND WILL OVERFLOW CONNECTION POOL',\n    url: 'https://redis.io/commands/monitor',\n  },\n  MOVE: {\n    syntax: 'MOVE key db',\n    summary: 'Move a key to another database.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/move',\n  },\n  MSET: {\n    syntax: 'MSET key value [key value ...]',\n    summary: 'Set multiple keys to multiple values.',\n    complexity: 'O(N) where N is the number of keys to set.',\n    since: '1.0.1',\n    url: 'https://redis.io/commands/mset',\n  },\n  MSETNX: {\n    syntax: 'MSETNX key value [key value ...]',\n    summary: 'Set multiple keys to multiple values, only if none of the keys exist.',\n    complexity: 'O(N) where N is the number of keys to set.',\n    since: '1.0.1',\n    url: 'https://redis.io/commands/msetnx',\n  },\n  MULTI: {\n    syntax: 'MULTI',\n    summary: 'Mark the start of a transaction block.',\n    since: '1.2.0',\n    url: 'https://redis.io/commands/multi',\n  },\n  OBJECT: {\n    syntax: 'OBJECT subcommand [arguments [arguments ...]]',\n    summary: 'Inspect the internals of Redis objects.',\n    complexity: 'O(1) for all the currently implemented subcommands.',\n    since: '2.2.3',\n    url: 'https://redis.io/commands/object',\n  },\n  PERSIST: {\n    syntax: 'PERSIST key',\n    summary: 'Remove the expiration from a key.',\n    complexity: 'O(1)',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/persist',\n  },\n  PEXPIRE: {\n    syntax: 'PEXPIRE key milliseconds [NX|XX|GT|LT]',\n    summary: \"Set a key's time to live in milliseconds.\",\n    complexity: 'O(1)',\n    since: '2.6.0, >= 7.0: Added options: NX, XX, GT and LT.',\n    url: 'https://redis.io/commands/pexpire',\n  },\n  PEXPIREAT: {\n    syntax: 'PEXPIREAT key milliseconds-timestamp [NX|XX|GT|LT]',\n    summary: 'Set the expiration for a key as a UNIX timestamp specified in milliseconds.',\n    complexity: 'O(1)',\n    since: '2.6.0, >= 7.0: Added options: NX, XX, GT and LT.',\n    url: 'https://redis.io/commands/pexpireat',\n  },\n  PFADD: {\n    syntax: 'PFADD key element [element ...]',\n    summary: 'Adds the specified elements to the specified HyperLogLog.',\n    complexity: 'O(1) to add every element.',\n    since: '2.8.9',\n    url: 'https://redis.io/commands/pfadd',\n  },\n  PFCOUNT: {\n    syntax: 'PFCOUNT key [key ...]',\n    summary: 'Return the approximated cardinality of the set(s) observed by the HyperLogLog at key(s).',\n    complexity:\n      'O(1) with a very small average constant time when called with a single key. O(N) with N being the \\\n      number of keys, and much bigger constant times, when called with multiple keys.',\n    since: '2.8.9',\n    url: 'https://redis.io/commands/pfcount',\n  },\n  PFMERGE: {\n    syntax: 'PFMERGE destkey sourcekey [sourcekey ...]',\n    summary: 'Merge N different HyperLogLogs into a single one.',\n    complexity: 'O(N) to merge N HyperLogLogs, but with high constant times.',\n    since: '2.8.9',\n    url: 'https://redis.io/commands/pfmerge',\n  },\n  PING: {\n    syntax: 'PING [message]',\n    summary: 'Ping the server.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/ping',\n  },\n  PSETEX: {\n    syntax: 'PSETEX key milliseconds value',\n    summary: 'Set the value and expiration in milliseconds of a key.',\n    complexity: 'O(1)',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/psetex',\n  },\n  PSUBSCRIBE: {\n    syntax: 'PSUBSCRIBE pattern [pattern ...]',\n    summary: 'Listen for messages published to channels matching the given patterns.',\n    complexity: 'O(N) where N is the number of patterns the client is already subscribed to.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/psubscribe',\n  },\n  PUBSUB: {\n    syntax: 'PUBSUB subcommand [argument [argument ...]]',\n    summary: 'Inspect the state of the Pub/Sub subsystem.',\n    complexity:\n      'O(N) for the CHANNELS subcommand, where N is the number of active channels, and assuming \\\n      constant time pattern matching (relatively short channels and patterns). O(N) for the NUMSUB \\\n      subcommand, where N is the number of requested channels. O(1) for the NUMPAT subcommand.',\n    since: '2.8.0',\n    url: 'https://redis.io/commands/pubsub',\n  },\n  PTTL: {\n    syntax: 'PTTL key',\n    summary: 'Get the time to live for a key in milliseconds.',\n    complexity: 'O(1)',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/pttl',\n  },\n  PUBLISH: {\n    syntax: 'PUBLISH channel message',\n    summary: 'Post a message to a channel.',\n    complexity:\n      'O(N+M) where N is the number of clients subscribed to the receiving channel and M is the total \\\n      number of subscribed patterns (by any client).',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/publish',\n  },\n  PUNSUBSCRIBE: {\n    syntax: 'PUNSUBSCRIBE [pattern [pattern ...]]',\n    summary: 'Stop listening for messages posted to channels matching the given patterns.',\n    complexity:\n      'O(N+M) where N is the number of patterns the client is already subscribed and M is the \\\n      number of total patterns subscribed in the system (by any client).',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/punsubscribe',\n  },\n  QUIT: {\n    syntax: 'QUIT',\n    summary: 'Close the connection.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/quit',\n  },\n  RANDOMKEY: {\n    syntax: 'RANDOMKEY',\n    summary: 'Return a random key from the keyspace.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/randomkey',\n  },\n  READONLY: {\n    syntax: 'READONLY',\n    summary: 'Enables read queries for a connection to a cluster replica node.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/readonly',\n  },\n  READWRITE: {\n    syntax: 'READWRITE',\n    summary: 'Disables read queries for a connection to a cluster replica node.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/readwrite',\n  },\n  RENAME: {\n    syntax: 'RENAME key newkey',\n    summary: 'Rename a key.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/rename',\n  },\n  RENAMENX: {\n    syntax: 'RENAMENX key newkey',\n    summary: 'Rename a key, only if the new key does not exist.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/renamenx',\n  },\n  RESET: {\n    syntax: 'RESET',\n    summary: 'Reset the connection.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/reset',\n  },\n  RESTORE: {\n    syntax: 'RESTORE key ttl serialized-value [REPLACE] [ABSTTL] [IDLETIME seconds] [FREQ frequency]',\n    summary: 'Create a key using the provided serialized value, previously obtained using DUMP.',\n    complexity:\n      'O(1) to create the new key and additional O(N*M) to reconstruct the serialized value, where N \\\n      is the number of Redis objects composing the value and M their average size. For small string values \\\n      the time complexity is thus O(1)+O(1*M) where M is small, so simply O(1). However for sorted set values \\\n      the complexity is O(N*M*log(N)) because inserting values into sorted sets is O(log(N)).',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/restore',\n  },\n  ROLE: {\n    syntax: 'ROLE',\n    summary: 'Return the role of the instance in the context of replication.',\n    since: '2.8.12',\n    url: 'https://redis.io/commands/role',\n  },\n  RPOP: {\n    syntax: 'RPOP key [count]',\n    summary: 'Remove and get the last element in a list.',\n    complexity: 'O(N) where N is the number of elements returned.',\n    since: '1.0.0, >= 6.2: Added the count argument.',\n    url: 'https://redis.io/commands/rpop',\n  },\n  RPOPLPUSH: {\n    syntax: 'RPOPLPUSH source destination',\n    summary: 'Remove the last element in a list, prepend it to another list and return it.',\n    complexity: 'O(1)',\n    warning: 'As per Redis 6.2.0, RPOPLPUSH is considered deprecated. Please prefer `LMOVE` in new code.',\n    since: '1.2.0',\n    url: 'https://redis.io/commands/rpoplpush',\n  },\n  LMOVE: {\n    syntax: 'LMOVE source destination LEFT|RIGHT LEFT|RIGHT',\n    summary: 'Pop an element from a list, push it to another list and return it.',\n    complexity: 'O(1)',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/lmove',\n  },\n  RPUSH: {\n    syntax: 'RPUSH key element [element ...]',\n    summary: 'Append one or multiple elements to a list.',\n    complexity:\n      'O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/rpush',\n  },\n  RPUSHX: {\n    syntax: 'RPUSHX key element [element ...]',\n    summary: 'Append an element to a list, only if the list exists.',\n    complexity:\n      'O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/rpushx',\n  },\n  SADD: {\n    syntax: 'SADD key member [member ...]',\n    summary: 'Add one or more members to a set.',\n    complexity:\n      'O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/sadd',\n  },\n  SAVE: {\n    syntax: 'SAVE',\n    summary: 'Synchronously save the dataset to disk.',\n    warning: 'You almost never want to call SAVE in production environments where it will block all the other clients.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/save',\n  },\n  SCARD: {\n    syntax: 'SCARD key',\n    summary: 'Get the number of members in a set.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/scard',\n  },\n  SINTERCARD: {\n    syntax: 'SINTERCARD numkeys key [key ...] [LIMIT limit]',\n    summary: 'Returns the cardinality of the set which would result from the intersection of all the given sets.',\n    complexity: 'O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets.',\n    since: '7.0.0',\n    url: 'https://redis.io/commands/sintercard',\n  },\n\n  /**\n   * Script\n   *\n   * @see https://redis.io/commands/eval\n   */\n  SCRIPT: {\n    syntax: 'SCRIPT DEBUG | EXISTS | FLUSH | KILL | LOAD',\n    summary: 'Redis Lua scripting.',\n    since: '3.2.0',\n    url: 'https://redis.io/commands/eval',\n  },\n  'SCRIPT DEBUG': {\n    syntax: 'SCRIPT DEBUG YES|SYNC|NO',\n    summary: 'Set the debug mode for executed scripts.',\n    warning: 'Avoid debugging Lua scripts using your Redis production server. Use a development server instead.',\n    complexity: 'O(1)',\n    since: '3.2.0',\n    url: 'https://redis.io/commands/script-debug',\n  },\n  'SCRIPT EXISTS': {\n    syntax: 'SCRIPT EXISTS sha1 [sha1 ...]',\n    summary: 'Check existence of scripts in the script cache.',\n    complexity: 'O(N) with N being the number of scripts to check (so checking a single script is an O(1) operation).',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/script-exists',\n  },\n  'SCRIPT FLUSH': {\n    syntax: 'SCRIPT FLUSH [ASYNC|SYNC]',\n    summary: 'Remove all the scripts from the script cache.',\n    complexity: 'O(N) with N being the number of scripts in cache.',\n    since: '2.6.0, >= 6.2.0: Added the ASYNC and SYNC flushing mode modifiers.',\n    url: 'https://redis.io/commands/script-flush',\n  },\n  'SCRIPT KILL': {\n    syntax: 'SCRIPT FLUSH',\n    summary: 'Kill the script currently in execution.',\n    complexity: 'O(1)',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/script-kill',\n  },\n  'SCRIPT LOAD': {\n    syntax: 'SCRIPT LOAD script',\n    summary: 'Load the specified Lua script into the script cache.',\n    complexity: 'O(N) with N being the length in bytes of the script body.',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/script-load',\n  },\n  SDIFF: {\n    syntax: 'SDIFF key [key ...]',\n    summary: 'Subtract multiple sets.',\n    complexity: 'O(N) where N is the total number of elements in all given sets.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/sdiff',\n  },\n  SDIFFSTORE: {\n    syntax: 'SDIFFSTORE destination key [key ...]',\n    summary: 'Subtract multiple sets and store the resulting set in a key.',\n    complexity: 'O(N) where N is the total number of elements in all given sets.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/sdiffstore',\n  },\n  SELECT: {\n    syntax: 'SELECT index',\n    summary: 'Change the selected database for the current connection.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/select',\n  },\n  SET: {\n    syntax: 'SET key value [EX seconds|PX milliseconds] [NX|XX] [KEEPTTL]',\n    summary: 'Set the string value of a key.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/set',\n  },\n  SETBIT: {\n    syntax: 'SETBIT key offset value',\n    summary: 'Sets or clears the bit at offset in the string value stored at key.',\n    complexity: 'O(1)',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/setbit',\n  },\n  SETEX: {\n    syntax: 'SETEX key seconds value',\n    summary: 'Set the value and expiration of a key.',\n    complexity: 'O(1)',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/setex',\n  },\n  SETNX: {\n    syntax: 'SETNX key value',\n    summary: 'Set the value of a key, only if the key does not exist.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/setnx',\n  },\n  SETRANGE: {\n    syntax: 'SETRANGE key offset value',\n    summary: 'Overwrite part of a string at key starting at the specified offset.',\n    complexity:\n      'O(1), not counting the time taken to copy the new string in place. Usually, this string is very small so the \\\n      amortized complexity is O(1). Otherwise, complexity is O(M) with M being the length of the value argument.',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/setrange',\n  },\n  SHUTDOWN: {\n    syntax: 'SHUTDOWN [NOSAVE|SAVE]',\n    summary: 'Synchronously save the dataset to disk and then shut down the server.',\n    danger: 'May cause data loss in Production environment.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/shutdown',\n  },\n  SINTER: {\n    syntax: 'SINTER key [key ...]',\n    summary: 'Intersect multiple sets.',\n    complexity: 'O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/sinter',\n  },\n  SINTERSTORE: {\n    syntax: 'SINTERSTORE destination key [key ...]',\n    summary: 'Intersect multiple sets and store the resulting set in a key.',\n    complexity: 'O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/sinterstore',\n  },\n  SISMEMBER: {\n    syntax: 'SISMEMBER key member',\n    summary: 'Determine if a given value is a member of a set.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/sismember',\n  },\n  SMISMEMBER: {\n    syntax: 'SMISMEMBER key member [member ...]',\n    summary: 'Returns the membership associated with the given elements for a set.',\n    complexity: 'O(N) where N is the number of elements being checked for membership.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/smismember',\n  },\n  SLAVEOF: {\n    syntax: 'SLAVEOF host port',\n    summary:\n      'Make the server a replica of another instance, or promote it as master. Deprecated starting with Redis 5. Use REPLICAOF instead.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/slaveof',\n  },\n  REPLICAOF: {\n    syntax: 'REPLICAOF host port',\n    summary: 'Make the server a replica of another instance, or promote it as master.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/replicaof',\n  },\n  SLOWLOG: {\n    syntax: 'SLOWLOG subcommand [argument]',\n    summary: 'Manages the Redis slow queries log.',\n    since: '2.2.12',\n    url: 'https://redis.io/commands/slowlog',\n  },\n  SMEMBERS: {\n    syntax: 'SMEMBERS key',\n    summary: 'Get all the members in a set.',\n    complexity: 'O(N) where N is the set cardinality.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/smembers',\n  },\n  SMOVE: {\n    syntax: 'SMOVE source destination member',\n    summary: 'Move a member from one set to another.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/smove',\n  },\n  SORT: {\n    syntax:\n      'SORT key [BY pattern] [LIMIT offset count] [GET pattern [GET pattern ...]] [ASC|DESC] [ALPHA] [STORE destination]',\n    summary: 'Sort the elements in a list, set or sorted set.',\n    complexity:\n      'O(N+M*log(M)) where N is the number of elements in the list or set to sort, and M \\\n      the number of returned elements. When the elements are not sorted, complexity is \\\n      currently O(N) as there is a copy step that will be avoided in next releases.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/sort',\n  },\n  SORT_RO: {\n    syntax: 'SORT_RO key [BY pattern] [LIMIT offset count] [GET pattern [GET pattern ...]] [ASC|DESC] [ALPHA]',\n    summary: 'Sort the elements in a list, set or sorted set. Read-only variant of SORT.',\n    complexity:\n      'O(N+M*log(M)) where N is the number of elements in the list or set to sort, and M the number of \\\n      returned elements. When the elements are not sorted, complexity is O(N).',\n    since: '7.0.0',\n    url: 'https://redis.io/commands/sort_ro',\n  },\n  SPOP: {\n    syntax: 'SPOP key [count]',\n    summary: 'Remove and return one or multiple random members from a set.',\n    complexity: 'O(1)',\n    since: '1.0.0, >= 3.2: Added the count argument.',\n    url: 'https://redis.io/commands/spop',\n  },\n  SRANDMEMBER: {\n    syntax: 'SRANDMEMBER key [count]',\n    summary: 'Get one or multiple random members from a set.',\n    complexity: 'Without the count argument O(1), otherwise O(N) where N is the absolute value of the passed count.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/srandmember',\n  },\n  SREM: {\n    syntax: 'SREM key member [member ...]',\n    summary: 'Remove one or more members from a set.',\n    complexity: 'O(N) where N is the number of members to be removed.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/srem',\n  },\n  STRALGO: {\n    syntax: 'STRALGO LCS algo-specific-argument [algo-specific-argument ...]',\n    summary: 'Run algorithms (currently LCS) against strings.',\n    complexity: 'For LCS O(strlen(s1)*strlen(s2)).',\n    since: '6.0.0',\n    url: 'https://redis.io/commands/stralgo',\n  },\n  STRLEN: {\n    syntax: 'STRLEN key',\n    summary: 'Get the length of the value stored in a key.',\n    complexity: 'O(1)',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/strlen',\n  },\n  SUBSCRIBE: {\n    syntax: 'SUBSCRIBE channel [channel ...]',\n    summary: 'Listen for messages published to the given channels.',\n    complexity: 'O(N) where N is the number of channels to subscribe to.',\n    since: '2.0.0, >= 6.2: RESET can be called to exit subscribed state.',\n    url: 'https://redis.io/commands/subscribe',\n  },\n  SUNION: {\n    syntax: 'SUNION key [key ...]',\n    summary: 'Add multiple sets.',\n    complexity: 'O(N) where N is the total number of elements in all given sets.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/sunion',\n  },\n  SUNIONSTORE: {\n    syntax: 'SUNIONSTORE destination key [key ...]',\n    summary: 'Add multiple sets and store the resulting set in a key.',\n    complexity: 'O(N) where N is the total number of elements in all given sets.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/sunionstore',\n  },\n  SWAPDB: {\n    syntax: 'SWAPDB index1 index2',\n    summary: 'Swaps two Redis databases.',\n    complexity: 'O(N) where N is the count of clients watching or blocking on keys from both databases.',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/swapdb',\n  },\n  SYNC: {\n    syntax: 'SYNC',\n    summary: 'Internal command used for replication.',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/sync',\n  },\n  PSYNC: {\n    syntax: 'PSYNC replicationid offset',\n    summary: 'Internal command used for replication.',\n    since: '2.8.0',\n    url: 'https://redis.io/commands/psync',\n  },\n  TIME: {\n    syntax: 'TIME',\n    summary: 'Return the current server time.',\n    complexity: 'O(1)',\n    since: '2.6.0',\n    url: 'https://redis.io/commands/time',\n  },\n  TOUCH: {\n    syntax: 'TOUCH key [key ...]',\n    summary: 'Alters the last access time of a key(s). Returns the number of existing keys specified.',\n    complexity: 'O(N) where N is the number of keys that will be touched.',\n    since: '3.2.1',\n    url: 'https://redis.io/commands/touch',\n  },\n  TTL: {\n    syntax: 'TTL key',\n    summary: 'Get the time to live for a key.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/ttl',\n  },\n  TYPE: {\n    syntax: 'TYPE key',\n    summary: 'Determine the type stored at key.',\n    complexity: 'O(1)',\n    since: '1.0.0',\n    url: 'https://redis.io/commands/type',\n  },\n  UNSUBSCRIBE: {\n    syntax: 'UNSUBSCRIBE [channel [channel ...]]',\n    summary: 'Stop listening for messages posted to the given channels.',\n    complexity: 'O(N) where N is the number of clients already subscribed to a channel.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/unsubscribe',\n  },\n  UNLINK: {\n    syntax: 'UNLINK key [key ...]',\n    summary: 'Delete a key asynchronously in another thread. Otherwise it is just as DEL, but non blocking.',\n    complexity:\n      'O(1) for each key removed regardless of its size. Then the command does O(N) work in a different thread \\\n      in order to reclaim memory, where N is the number of allocations the deleted objects where composed of.',\n    since: '4.0.0',\n    url: 'https://redis.io/commands/unlink',\n  },\n  UNWATCH: {\n    syntax: 'UNWATCH',\n    summary: 'Forget about all watched keys.',\n    complexity: 'O(1)',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/unwatch',\n  },\n  WAIT: {\n    syntax: 'WAIT numreplicas timeout',\n    summary:\n      'Wait for the synchronous replication of all the write commands sent in the context of the current connection.',\n    complexity: 'O(1)',\n    since: '3.0.0',\n    url: 'https://redis.io/commands/wait',\n  },\n  WATCH: {\n    syntax: 'WATCH key [key ...]',\n    summary: 'Watch the given keys to determine execution of the MULTI/EXEC block.',\n    complexity: 'O(1) for every key.',\n    since: '2.2.0',\n    url: 'https://redis.io/commands/watch',\n  },\n\n  /**\n   * Sorted Set\n   */\n  ZADD: {\n    syntax: 'ZADD key [NX|XX] [GT|LT] [CH] [INCR] score member [score member ...]',\n    summary: 'Add one or more members to a sorted set, or update its score if it already exists.',\n    complexity: 'O(log(N)) for each item added, where N is the number of elements in the sorted set.',\n    since: '1.2.0, >= 6.2: Added the GT and LT options.',\n    url: 'https://redis.io/commands/zadd',\n  },\n  ZCARD: {\n    syntax: 'ZCARD key',\n    summary: 'Get the number of members in a sorted set.',\n    complexity: 'O(1)',\n    since: '1.2.0',\n    url: 'https://redis.io/commands/zcard',\n  },\n  ZINTERCARD: {\n    syntax: 'ZINTERCARD numkeys key [key ...] [LIMIT limit]',\n    summary:\n      'This command is similar to ZINTER, but instead of returning the result set, it returns just the cardinality of the result.',\n    complexity:\n      'O(N*K) worst case with N being the smallest input sorted set, K being the number of input sorted sets.',\n    since: '7.0.0',\n    url: 'https://redis.io/commands/zintercard',\n  },\n  ZCOUNT: {\n    syntax: 'ZCOUNT key min max',\n    summary: 'Count the members in a sorted set with scores within the given values.',\n    complexity: 'O(log(N)) with N being the number of elements in the sorted set.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/zcount',\n  },\n  ZDIFF: {\n    syntax: 'ZDIFF numkeys key [key ...] [WITHSCORES]',\n    summary: 'Subtract multiple sorted sets.',\n    complexity:\n      'O(L + (N-K)log(N)) worst case where L is the total number of elements in all the sets, N is the size of the first set, and K is the size of the result set.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/zdiff',\n  },\n  ZDIFFSTORE: {\n    syntax: 'ZDIFFSTORE destination numkeys key [key ...]',\n    summary:\n      'O(L + (N-K)log(N)) worst case where L is the total number of elements in all the sets, N is the size of the first set, and K is the size of the result set.',\n    complexity:\n      'O(L + (N-K)log(N)) worst case where L is the total number of elements in all the sets, N is the size of the first set, and K is the size of the result set.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/zdiffstore',\n  },\n  ZINCRBY: {\n    syntax: 'ZINCRBY key increment member',\n    summary: 'Increment the score of a member in a sorted set.',\n    complexity: 'O(log(N)) where N is the number of elements in the sorted set.',\n    since: '1.2.0',\n    url: 'https://redis.io/commands/zincrby',\n  },\n  ZINTER: {\n    syntax: 'ZINTER numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX] [WITHSCORES]',\n    summary: 'Intersect multiple sorted sets.',\n    complexity:\n      'O(N*K)+O(M*log(M)) worst case with N being the smallest input sorted set, K being the number of \\\n      input sorted sets and M being the number of elements in the resulting sorted set.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/zinter',\n  },\n  ZINTERSTORE: {\n    syntax: 'ZINTERSTORE destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX]',\n    summary: 'Intersect multiple sorted sets and store the resulting sorted set in a new key.',\n    complexity:\n      'O(N*K)+O(M*log(M)) worst case with N being the smallest input sorted set, K being the number of input \\\n      sorted sets and M being the number of elements in the resulting sorted set.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/zinterstore',\n  },\n  ZLEXCOUNT: {\n    syntax: 'ZLEXCOUNT key min max',\n    summary: 'Count the number of members in a sorted set between a given lexicographical range.',\n    complexity: 'O(log(N)) with N being the number of elements in the sorted set.',\n    since: '2.8.9',\n    url: 'https://redis.io/commands/zlexcount',\n  },\n  ZPOPMAX: {\n    syntax: 'ZPOPMAX key [count]',\n    summary: 'Remove and return members with the highest scores in a sorted set.',\n    complexity:\n      'O(log(N)*M) with N being the number of elements in the sorted set, and M being the number of elements popped.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/zpopmax',\n  },\n  ZPOPMIN: {\n    syntax: 'ZPOPMIN key [count]',\n    summary: 'Remove and return members with the lowest scores in a sorted set.',\n    complexity:\n      'O(log(N)*M) with N being the number of elements in the sorted set, and M being the number of elements popped.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/zpopmin',\n  },\n  ZRANDMEMBER: {\n    syntax: 'ZRANDMEMBER key [count [WITHSCORES]]',\n    summary: 'Get one or multiple random elements from a sorted set.',\n    complexity: 'O(N) where N is the number of elements returned.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/zrandmember',\n  },\n  ZRANGESTORE: {\n    syntax: 'ZRANGESTORE dst src min max [BYSCORE|BYLEX] [REV] [LIMIT offset count]',\n    summary: 'Store a range of members from sorted set into another key.',\n    complexity:\n      'O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements stored into the destination key.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/zrangestore',\n  },\n  ZRANGE: {\n    syntax: 'ZRANGE key min max [BYSCORE|BYLEX] [REV] [LIMIT offset count] [WITHSCORES]',\n    summary: 'Return a range of members in a sorted set, by index.',\n    complexity:\n      'O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements returned.',\n    since: '1.2.0, >= 6.2: Added the REV, BYSCORE, BYLEX and LIMIT options.',\n    url: 'https://redis.io/commands/zrange',\n  },\n  ZRANGEBYLEX: {\n    syntax: 'ZRANGEBYLEX key min max [LIMIT offset count]',\n    summary: 'Return a range of members in a sorted set, by lexicographical range.',\n    complexity:\n      'O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being \\\n      returned. If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)).',\n    since: '2.8.9',\n    warning:\n      'As per Redis 6.2.0, this command is considered deprecated. Please prefer using the `ZRANGE` command with the `BYLEX` argument in new code.',\n    url: 'https://redis.io/commands/zrangebylex',\n  },\n  ZREVRANGEBYLEX: {\n    syntax: 'ZREVRANGEBYLEX key max min [LIMIT offset count]',\n    summary:\n      'Return a range of members in a sorted set, by lexicographical range, ordered from higher to lower strings.',\n    complexity:\n      'O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. \\\n      If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)).',\n    since: '2.8.9',\n    warning:\n      'As per Redis 6.2.0, this command is considered deprecated. Please prefer using the `ZRANGE` command with the `BYLEX` and `REV` arguments in new code.',\n    url: 'https://redis.io/commands/zrevrangebylex',\n  },\n  ZRANGEBYSCORE: {\n    syntax: 'ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]',\n    summary: 'Return a range of members in a sorted set, by score.',\n    complexity:\n      'O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. \\\n      If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)).',\n    since: '1.0.5',\n    warning:\n      'As per Redis 6.2.0, this command is considered deprecated. Please prefer using the `ZRANGE` command with the `BYSCORE` argument in new code.',\n    url: 'https://redis.io/commands/zrangebyscore',\n  },\n  ZRANK: {\n    syntax: 'ZRANK key member',\n    summary: 'Determine the index of a member in a sorted set.',\n    complexity: 'O(log(N))',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/zrank',\n  },\n  ZREM: {\n    syntax: 'ZREM key member [member ...]',\n    summary: 'Remove one or more members from a sorted set.',\n    complexity:\n      'O(M*log(N)) with N being the number of elements in the sorted set and M the number of elements to be removed.',\n    since: '1.2.0',\n    url: 'https://redis.io/commands/zrem',\n  },\n  ZREMRANGEBYLEX: {\n    syntax: 'ZREMRANGEBYLEX key min max',\n    summary: 'Remove all members in a sorted set between the given lexicographical range.',\n    complexity:\n      'O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements removed by the operation.',\n    since: '2.8.9',\n    url: 'https://redis.io/commands/zremrangebylex',\n  },\n  ZREMRANGEBYRANK: {\n    syntax: 'ZREMRANGEBYRANK key start stop',\n    summary: 'Remove all members in a sorted set within the given indexes.',\n    complexity:\n      'O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements removed by the operation.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/zremrangebyrank',\n  },\n  ZREMRANGEBYSCORE: {\n    syntax: 'ZREMRANGEBYSCORE key min max',\n    summary: 'Remove all members in a sorted set within the given scores.',\n    complexity:\n      'O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements removed by the operation.',\n    since: '1.2.0',\n    url: 'https://redis.io/commands/zremrangebyscore',\n  },\n  ZREVRANGE: {\n    syntax: 'ZREVRANGE key start stop [WITHSCORES]',\n    summary: 'Return a range of members in a sorted set, by index, with scores ordered from high to low.',\n    complexity:\n      'O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements returned.',\n    since: '1.2.0',\n    url: 'https://redis.io/commands/zrevrange',\n  },\n  ZREVRANGEBYSCORE: {\n    syntax: 'ZREVRANGEBYSCORE key max min [WITHSCORES] [LIMIT offset count]ZREVRANGE key start stop [WITHSCORES]',\n    summary: 'Return a range of members in a sorted set, by score, with scores ordered from high to low.',\n    complexity:\n      'O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. \\\n      If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)).',\n    since: '2.2.0',\n    warning:\n      'As per Redis 6.2.0, this command is considered deprecated. Please prefer using the `ZRANGE` command with the `BYSCORE` and `REV` arguments in new code.',\n    url: 'https://redis.io/commands/zrevrangebyscore',\n  },\n  ZREVRANK: {\n    syntax: 'ZREVRANK key member',\n    summary: 'Determine the index of a member in a sorted set, with scores ordered from high to low.',\n    complexity: 'O(log(N))',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/zrevrank',\n  },\n  ZSCORE: {\n    syntax: 'ZSCORE key member',\n    summary: 'Get the score associated with the given member in a sorted set.',\n    complexity: 'O(1)',\n    since: '1.2.0',\n    url: 'https://redis.io/commands/zscore',\n  },\n  ZUNION: {\n    syntax: 'ZUNION numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX] [WITHSCORES]',\n    summary: 'Add multiple sorted sets.',\n    complexity:\n      'O(N)+O(M*log(M)) with N being the sum of the sizes of the input sorted sets, and M being the number of elements in \\\n      the resulting sorted set.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/zunion',\n  },\n  ZMSCORE: {\n    syntax: 'ZMSCORE key member [member ...]',\n    summary: 'Get the score associated with the given members in a sorted set.',\n    complexity: 'O(N) where N is the number of members being requested.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/zmscore',\n  },\n  ZUNIONSTORE: {\n    syntax: 'ZUNIONSTORE destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX]',\n    summary: 'Add multiple sorted sets and store the resulting sorted set in a new key',\n    complexity:\n      'O(N)+O(M log(M)) with N being the sum of the sizes of the input sorted sets, and M being the number \\\n      of elements in the resulting sorted set.',\n    since: '2.0.0',\n    url: 'https://redis.io/commands/zunionstore',\n  },\n\n  /**\n   * Scan commands\n   */\n  SCAN: {\n    syntax: 'SCAN cursor [MATCH pattern] [COUNT count] [TYPE type]',\n    summary: 'Incrementally iterate the keys space.',\n    complexity:\n      'O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to \\\n      return back to 0. N is the number of elements inside the collection.',\n    since: '2.8.0',\n    url: 'https://redis.io/commands/scan',\n  },\n  SSCAN: {\n    syntax: 'SSCAN key cursor [MATCH pattern] [COUNT count]',\n    summary: 'Incrementally iterate Set elements.',\n    complexity:\n      'O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to \\\n      return back to 0. N is the number of elements inside the collection.',\n    since: '2.8.0',\n    url: 'https://redis.io/commands/sscan',\n  },\n  HSCAN: {\n    syntax: 'HSCAN key cursor [MATCH pattern] [COUNT count]',\n    summary: 'Incrementally iterate hash fields and associated values.',\n    complexity:\n      'O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to \\\n      return back to 0. N is the number of elements inside the collection.',\n    since: '2.8.0',\n    url: 'https://redis.io/commands/hscan',\n  },\n  ZSCAN: {\n    syntax: 'ZSCAN key cursor [MATCH pattern] [COUNT count]',\n    summary: 'Incrementally iterate sorted sets elements and associated scores.',\n    complexity:\n      'O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to \\\n      return back to 0. N is the number of elements inside the collection.',\n    since: '2.8.0',\n    url: 'https://redis.io/commands/zscan',\n  },\n\n  /**\n   * Streams\n   *\n   * @see https://redis.io/topics/streams-intro\n   */\n  XINFO: {\n    syntax: 'XINFO [CONSUMERS key groupname] [GROUPS key] [STREAM key] [HELP]',\n    summary: 'Get information on streams and consumer groups.',\n    complexity:\n      'O(N) with N being the number of returned items for the subcommands CONSUMERS and GROUPS. The STREAM \\\n      subcommand is O(log N) with N being the number of items in the stream.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/xinfo',\n  },\n  XADD: {\n    syntax: 'XADD key [NOMKSTREAM] [MAXLEN|MINID [=|~] threshold [LIMIT count]] *|ID field value [field value ...]',\n    summary: 'Appends a new entry to a stream.',\n    complexity: 'O(1) when adding a new entry, O(N) when trimming where N being the number of entires evicted.',\n    since: '5.0.0, >= 6.2: Added the NOMKSTREAM option, MINID trimming strategy and the LIMIT option.',\n    url: 'https://redis.io/commands/xadd',\n  },\n  XTRIM: {\n    syntax: 'XTRIM key MAXLEN|MINID [=|~] threshold [LIMIT count]',\n    summary: \"Trims the stream to (approximately if '~' is passed) a certain size.\",\n    complexity:\n      'O(N), with N being the number of evicted entries. Constant times are very small however, since \\\n      entries are organized in macro nodes containing multiple entries that can be released with a single deallocation.',\n    since: '5.0.0, >= 6.2: Added the MINID trimming strategy and the LIMIT option.',\n    url: 'https://redis.io/commands/xtrim',\n  },\n  XDEL: {\n    syntax: 'XDEL key ID [ID ...]',\n    summary:\n      'Removes the specified entries from the stream. Returns the number of items actually deleted, that may be \\\n      different from the number of IDs passed in case certain IDs do not exist.',\n    complexity: 'O(1) for each single item to delete in the stream, regardless of the stream size.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/xdel',\n  },\n  XRANGE: {\n    syntax: 'XRANGE key start end [COUNT count]',\n    summary: 'Return a range of elements in a stream, with IDs matching the specified IDs interval.',\n    complexity:\n      'O(N) with N being the number of elements being returned. If N is constant (e.g. always asking for the \\\n        first 10 elements with COUNT), you can consider it O(1).',\n    since: '5.0.0, >= 6.2 Added exclusive ranges.',\n    url: 'https://redis.io/commands/xrange',\n  },\n  XREVRANGE: {\n    syntax: 'XREVRANGE key end start [COUNT count]',\n    summary:\n      'Return a range of elements in a stream, with IDs matching the specified IDs interval, in reverse order \\\n      (from greater to smaller IDs) compared to XRANGE.',\n    complexity:\n      'O(N) with N being the number of elements returned. If N is constant (e.g. always asking for the first \\\n        10 elements with COUNT), you can consider it O(1).',\n    since: '5.0.0, >= 6.2 Added exclusive ranges.',\n    url: 'https://redis.io/commands/xrevrange',\n  },\n  XLEN: {\n    syntax: 'XLEN key',\n    summary: 'Return the number of entries in a stream.',\n    complexity: 'O(1)',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/xlen',\n  },\n  XREAD: {\n    syntax: 'XREAD [COUNT count] [BLOCK milliseconds] STREAMS key [key ...] id [id ...]',\n    summary:\n      'Return never seen elements in multiple streams, with IDs greater than the ones reported by the caller \\\n      for each stream. Can block.',\n    complexity:\n      'For each stream mentioned: O(N) with N being the number of elements being returned, it means that XREAD-ing \\\n      with a fixed COUNT is O(1). Note that when the BLOCK option is used, XADD will pay O(M) time in order to \\\n      serve the M clients blocked on the stream getting new data.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/xread',\n  },\n  XGROUP: {\n    syntax:\n      'XGROUP [CREATE key groupname id-or-$] [SETID key groupname id-or-$] [DESTROY key groupname] \\\n    [CREATECONSUMER key groupname consumername] [DELCONSUMER key groupname consumername]',\n    summary: 'Create, destroy, and manage consumer groups.',\n    complexity:\n      'O(1) for all the subcommands, with the exception of the DESTROY subcommand which takes an additional \\\n      O(M) time in order to delete the M entries inside the consumer group pending entries list (PEL).',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/xgroup',\n  },\n  XREADGROUP: {\n    syntax:\n      'XREADGROUP GROUP group consumer [COUNT count] [BLOCK milliseconds] [NOACK] STREAMS key [key ...] ID [ID ...]',\n    summary:\n      'Return new entries from a stream using a consumer group, or access the history of the pending entries \\\n      for a given consumer. Can block.',\n    complexity:\n      'For each stream mentioned: O(M) with M being the number of elements returned. If M is constant (e.g. \\\n        always asking for the first 10 elements with COUNT), you can consider it O(1). On the other side when \\\n        XREADGROUP blocks, XADD will pay the O(N) time in order to serve the N clients blocked on the stream getting new data.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/xreadgroup',\n  },\n  XACK: {\n    syntax: 'XACK key group ID [ID ...]',\n    summary:\n      'Marks a pending message as correctly processed, effectively removing it from the pending entries list of the \\\n      consumer group. Return value of the command is the number of messages successfully acknowledged, that is, the \\\n      IDs we were actually able to resolve in the PEL.',\n    complexity: 'O(1) for each message ID processed.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/xack',\n  },\n  XCLAIM: {\n    syntax:\n      'XCLAIM key group consumer min-idle-time ID [ID ...] [IDLE ms] [TIME ms-unix-time] [RETRYCOUNT count] [FORCE] [JUSTID]',\n    summary:\n      'Changes (or acquires) ownership of a message in a consumer group, as if the message was delivered to the specified consumer. \\\n      As of Redis 6.2, consumers can use the `XAUTOCLAIM` command to automatically scan and claim stale pending messages.',\n    complexity: 'O(log N) with N being the number of messages in the PEL of the consumer group.',\n    since: '5.0.0',\n    url: 'https://redis.io/commands/xclaim',\n  },\n  XAUTOCLAIM: {\n    syntax: 'XAUTOCLAIM key group consumer min-idle-time start [COUNT count] [JUSTID]',\n    summary:\n      'Changes (or acquires) ownership of messages in a consumer group, as if the messages were delivered to the specified consumer.',\n    complexity: 'O(1) if COUNT is small.',\n    since: '6.2.0',\n    url: 'https://redis.io/commands/xautoclaim',\n  },\n  XPENDING: {\n    syntax: 'XPENDING key group [[IDLE min-idle-time] start end count [consumer]]',\n    summary:\n      'Return information and entries from a stream consumer group pending entries list, that are messages fetched but never acknowledged.',\n    complexity:\n      'O(N) with N being the number of elements returned, so asking for a small fixed number of entries per call is O(1). O(M), where M \\\n      is the total number of entries scanned when used with the IDLE filter. When the command returns just the summary and the list of \\\n      consumers is small, it runs in O(1) time; otherwise, an additional O(N) time for iterating every consumer.',\n    since: '5.0.0, >= 6.2.0: Added the IDLE option and exclusive range intervals.',\n    url: 'https://redis.io/commands/xpending',\n  },\n\n  /**\n   * Latency\n   *\n   * @see https://redis.io/topics/latency-monitor\n   */\n  LATENCY: {\n    syntax: 'LATENCY DOCTOR | GRAPH | HISTORY | LATEST | RESET | HELP',\n    summary: 'Latency Monitoring, that helps the user to check and troubleshoot possible latency problems.',\n    since: '2.8.13',\n    url: 'https://redis.io/topics/latency-monitor',\n  },\n  'LATENCY DOCTOR': {\n    syntax: 'LATENCY DOCTOR',\n    summary: 'Return a human readable latency analysis report.',\n    since: '2.8.13',\n    url: 'https://redis.io/commands/latency-doctor',\n  },\n  'LATENCY GRAPH': {\n    syntax: 'LATENCY GRAPH event',\n    summary: 'Return a latency graph for the event.',\n    since: '2.8.13',\n    url: 'https://redis.io/commands/latency-graph',\n  },\n  'LATENCY HISTORY': {\n    syntax: 'LATENCY HISTORY event',\n    summary: 'Return timestamp-latency samples for the event.',\n    since: '2.8.13',\n    url: 'https://redis.io/commands/latency-history',\n  },\n  'LATENCY LATEST': {\n    syntax: 'LATENCY LATEST',\n    summary: 'Return the latest latency samples for all events.',\n    since: '2.8.13',\n    url: 'https://redis.io/commands/latency-latest',\n  },\n  'LATENCY RESET': {\n    syntax: 'LATENCY RESET [event [event ...]]',\n    summary: 'Reset latency data for one or more events.',\n    since: '2.8.13',\n    url: 'https://redis.io/commands/latency-reset',\n  },\n  'LATENCY HELP': {\n    syntax: 'LATENCY HELP',\n    summary: 'Show helpful text about the different subcommands.',\n    since: '2.8.13',\n    url: 'https://redis.io/commands/latency-help',\n  },\n\n  /**\n   * Redis 7\n   */\n  EXPIRETIME: {\n    syntax: 'EXPIRETIME key',\n    summary:\n      'Returns the absolute Unix timestamp (since January 1, 1970) in seconds at which the given key will expire.',\n    since: '7.0.0',\n    url: 'https://redis.io/commands/expiretime',\n  },\n  PEXPIRETIME: {\n    syntax: 'PEXPIRETIME key',\n    summary:\n      'Returns the absolute Unix timestamp (since January 1, 1970) in milliseconds at which the given key will expire.',\n    since: '7.0.0',\n    url: 'https://redis.io/commands/pexpiretime',\n  },\n  EVAL_RO: {\n    syntax: 'EVAL_RO script numkeys key [key ...] arg [arg ...]',\n    summary: \"This is a read-only variant of the EVAL command that isn't allowed to execute commands that modify data.\",\n    since: '7.0.0',\n    url: 'https://redis.io/commands/eval_ro',\n  },\n  EVALSHA_RO: {\n    syntax: 'EVALSHA_RO sha1 numkeys key [key ...] arg [arg ...]',\n    summary:\n      \"This is a read-only variant of the EVALSHA command that isn't allowed to execute commands that modify data.\",\n    since: '7.0.0',\n    url: 'https://redis.io/commands/evalsha_ro',\n  },\n  ZMPOP: {\n    syntax: 'ZMPOP numkeys key [key ...] MIN|MAX [COUNT count]',\n    summary:\n      'Pops one or more elements, that are member-score pairs, from the first non-empty sorted set in the provided list of key names.',\n    since: '7.0.0',\n    complexity:\n      'O(K) + O(N*log(M)) where K is the number of provided keys, N being the number of elements in the sorted set, and M being the number of elements popped.',\n    url: 'https://redis.io/commands/zmpop',\n  },\n  BZMPOP: {\n    syntax: 'BZMPOP timeout numkeys key [key ...] MIN|MAX [COUNT count]',\n    summary: 'BZMPOP is the blocking variant of ZMPOP.',\n    since: '7.0.0',\n    complexity:\n      'O(K) + O(N*log(M)) where K is the number of provided keys, N being the number of elements in the sorted set, and M being the number of elements popped.',\n    url: 'https://redis.io/commands/bzmpop',\n  },\n};\n","import { HelpCommand } from '../types';\n\n/**\n * RedisAI\n *\n * @see https://oss.redislabs.com/redisai/\n */\nexport const RedisAIHelp: { [key: string]: HelpCommand } = {\n  AI: {\n    syntax:\n      'AI.TENSORSET, AI.TENSORGET, AI.MODELSET, AI.MODELGET, AI.MODELDEL, AI.MODELRUN, AI.SCRIPTSET, AI.SCRIPTGET, \\\n      AI.SCRIPTDEL, AI.SCRIPTRUN, AI.DAGRUN, AI.DAGRUN_RO, AI.INFO, AI.CONFIG',\n    summary: 'RedisAI is a Redis module for executing Deep Learning/Machine Learning models and managing their data.',\n    url: 'https://oss.redislabs.com/redisai/',\n  },\n  'AI TENSORSET': {\n    syntax: 'AI.TENSORSET <key> <type> <shape> [shape ...] [BLOB <data> | VALUES <val> [val ...]]',\n    summary: 'Store a tensor as the value of a key.',\n    url: 'https://oss.redislabs.com/redisai/commands/#aitensorset',\n  },\n  'AI TENSORGET': {\n    syntax: 'AI.TENSORGET <key> [META] [format]',\n    summary: \"Return a tensor stored as key's value.\",\n    url: 'https://oss.redislabs.com/redisai/commands/#aitensorget',\n  },\n  'AI MODELSET': {\n    syntax:\n      'AI.MODELSET <key> <backend> <device> [TAG tag] [BATCHSIZE n [MINBATCHSIZE m]] \\\n    [INPUTS <name> ...] [OUTPUTS name ...] BLOB <model>',\n    summary: 'Store a model as the value of a key.',\n    url: 'https://oss.redislabs.com/redisai/commands/#aimodelset',\n  },\n  'AI MODELGET': {\n    syntax: 'AI.MODELGET <key> [META] [BLOB]',\n    summary: \"Return a model's metadata and blob stored as a key's value.\",\n    url: 'https://oss.redislabs.com/redisai/commands/#aimodelget',\n  },\n  'AI MODELDEL': {\n    syntax: 'AI.MODELDEL <key>',\n    summary: \"Delete a model stored as a key's value.\",\n    url: 'https://oss.redislabs.com/redisai/commands/#aimodeldel',\n  },\n  'AI MODELRUN': {\n    syntax: 'AI.MODELRUN <key> INPUTS <input> [input ...] OUTPUTS <output> [output ...]',\n    summary: \"Run a model stored as a key's value using its specified backend and device.\",\n    warning: 'Intermediate memory overhead.',\n    url: 'https://oss.redislabs.com/redisai/commands/#aimodelrun',\n  },\n  'AI SCRIPTSET': {\n    syntax: 'AI.SCRIPTSET <key> <device> [TAG tag] SOURCE \"<script>\"',\n    summary: 'Store a TorchScript as the value of a key.',\n    url: 'https://oss.redislabs.com/redisai/commands/#aiscriptset',\n  },\n  'AI SCRIPTGET': {\n    syntax: 'AI.SCRIPTGET <key> [META] [SOURCE]',\n    summary: \"Return the TorchScript stored as a key's value.\",\n    url: 'https://oss.redislabs.com/redisai/commands/#aiscriptget',\n  },\n  'AI SCRIPTDEL': {\n    syntax: 'AI.SCRIPTDEL <key>',\n    summary: \"Delete a script stored as a key's value.\",\n    url: 'https://oss.redislabs.com/redisai/commands/#aiscriptdel',\n  },\n  'AI SCRIPTRUN': {\n    syntax: 'AI.SCRIPTRUN <key> <function> INPUTS <input> [input ...] OUTPUTS <output> [output ...]',\n    summary: \"Run a script stored as a key's value on its specified device.\",\n    warning: 'Intermediate memory overhead.',\n    url: 'https://oss.redislabs.com/redisai/commands/#aiscriptrun',\n  },\n  'AI DAGRUN': {\n    syntax:\n      'AI.DAGRUN [LOAD <n> <key-1> <key-2> ... <key-n>] [PERSIST <n> <key-1> <key-2> ... <key-n>] \\\n    |> <command> [|>  command ...]',\n    summary: 'Specify a direct acyclic graph of operations to run within RedisAI.',\n    warning: 'Intermediate memory overhead.',\n    url: 'https://oss.redislabs.com/redisai/commands/#aidagrun',\n  },\n  'AI DAGRUN_RO': {\n    syntax: 'AI.DAGRUN_RO [LOAD <n> <key-1> <key-2> ... <key-n>] |> <command> [|>  command ...]',\n    summary: 'Read-only variant of AI.DAGRUN.',\n    url: 'https://oss.redislabs.com/redisai/commands/#aidagrun_ro',\n  },\n  'AI INFO': {\n    syntax: 'AI.INFO <key> [RESETSTAT]',\n    summary: 'Return information about the execution a model or a script.',\n    url: 'https://oss.redislabs.com/redisai/commands/#aiinfo',\n  },\n  'AI CONFIG': {\n    syntax: 'AI.CONFIG <BACKENDSPATH <path>> | <LOADBACKEND <backend> <path>>',\n    summary: 'Set the value of configuration directives at run-time, and allows loading DL/ML backends dynamically.',\n    url: 'https://oss.redislabs.com/redisai/commands/#aiconfig',\n  },\n};\n","import { HelpCommand } from '../types';\n\n/**\n * RedisBloom\n *\n * @see https://oss.redislabs.com/redisbloom/\n */\nexport const RedisBloomHelp: { [key: string]: HelpCommand } = {\n  BF: {\n    syntax: 'BF.RESERVE, BF.ADD, BF.MADD, BF.INSERT, BF.EXISTS, BF.MEXISTS, BF.SCANDUMP, BF.LOADCHUNK, BF.INFO',\n    summary: 'RedisBloom Bloom Filter',\n    url: 'https://oss.redislabs.com/redisbloom/Bloom_Commands/',\n  },\n  'BF RESERVE': {\n    syntax: 'BF.RESERVE {key} {error_rate} {capacity} [EXPANSION expansion] [NONSCALING]',\n    summary: 'Create an empty Bloom Filter with a given desired error ratio and initial capacity.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisbloom/Bloom_Commands/#bfreserve',\n  },\n  'BF ADD': {\n    syntax: 'BF.ADD {key} {item}',\n    summary: 'Add an item to the Bloom Filter, creating the filter if it does not yet exist.',\n    complexity: 'O(log N), where N is the number of stacked filters in the data structure.',\n    url: 'https://oss.redislabs.com/redisbloom/Bloom_Commands/#bfadd',\n  },\n  'BF MADD': {\n    syntax: 'BF.MADD {key} {item} [item...]',\n    summary: 'Add one or more items to the Bloom Filter, creating the filter if it does not yet exist.',\n    complexity: 'O(log N), where N is the number of stacked filters in the data structure.',\n    url: 'https://oss.redislabs.com/redisbloom/Bloom_Commands/#bfmadd',\n  },\n  'BF INSERT': {\n    syntax:\n      'BF.INSERT {key} [CAPACITY {cap}] [ERROR {error}] [EXPANSION expansion] [NOCREATE] [NONSCALING] ITEMS {item...}',\n    summary: 'Add one or more items to the bloom filter, by default creating it if it does not yet exist.',\n    complexity: 'O(log N), where N is the number of stacked filters in the data structure.',\n    url: 'https://oss.redislabs.com/redisbloom/Bloom_Commands/#bfinsert',\n  },\n  'BF EXISTS': {\n    syntax: 'BF.EXISTS {key} {item}',\n    summary: 'Determine whether an item may exist in the Bloom Filter or not.',\n    complexity: 'O(log N), where N is the number of stacked filters in the data structure.',\n    url: 'https://oss.redislabs.com/redisbloom/Bloom_Commands/#bfexists',\n  },\n  'BF MEXISTS': {\n    syntax: 'BF.MEXISTS {key} {item} [item...]',\n    summary: 'Determine if one or more items may exist in the filter or not.',\n    complexity: 'O(log N), where N is the number of stacked filters in the data structure.',\n    url: 'https://oss.redislabs.com/redisbloom/Bloom_Commands/#bfmexists',\n  },\n  'BF SCANDUMP': {\n    syntax: 'BF.SCANDUMP {key} {iter}',\n    summary: 'Begin an incremental save of the bloom filter.',\n    complexity: 'O(log N), where N is the number of stacked filters in the data structure.',\n    url: 'https://oss.redislabs.com/redisbloom/Bloom_Commands/#bfscandump',\n  },\n  'BF LOADCHUNK': {\n    syntax: 'BF.LOADCHUNK {key} {iter} {data}',\n    summary: 'Restore a filter previously saved using SCANDUMP.',\n    complexity: 'O(log N), where N is the number of stacked filters in the data structure.',\n    url: 'https://oss.redislabs.com/redisbloom/Bloom_Commands/#bfloadchunk',\n  },\n  'BF INFO': {\n    syntax: 'BF.INFO {key}',\n    summary: 'Return information about key.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisbloom/Bloom_Commands/#bfinfo',\n  },\n  CF: {\n    syntax:\n      'CF.RESERVE, CF.ADD, CF.ADDNX, CF.INSERT, CF.INSERTNX, CF.EXISTS, CF.DEL, CF.COUNT, CF.SCANDUMP, CF.LOADCHUNK, CF.INFO',\n    summary: 'RedisBloom Cuckoo Filter',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/',\n  },\n  'CF RESERVE': {\n    syntax: 'CF.RESERVE {key} {capacity} [BUCKETSIZE bucketSize] [MAXITERATIONS maxIterations] [EXPANSION expansion]',\n    summary: 'Create an empty cuckoo filter with an initial capacity of {capacity} items.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfreserve',\n  },\n  'CF ADD': {\n    syntax: 'CF.ADD {key} {item}',\n    summary: 'Add an item to the cuckoo filter, creating the filter if it does not exist.',\n    complexity: 'O(log N)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfadd',\n  },\n  'CF ADDNX': {\n    syntax: 'CF.ADDNX {key} {item}',\n    summary: 'Add an item to a cuckoo filter if the item did not exist previously.',\n    complexity: 'O(log N)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfaddnx',\n  },\n  'CF INSERT': {\n    syntax: 'CF.INSERT {key} [CAPACITY {cap}] [NOCREATE] ITEMS {item ...}',\n    summary: 'Add one or more items to a cuckoo filter.',\n    complexity: 'O(log N)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfinsert',\n  },\n  'CF INSERTNX': {\n    syntax: 'CF.INSERTNX {key} [CAPACITY {cap}] [NOCREATE] ITEMS {item ...}',\n    summary:\n      'Add one or more items to a cuckoo filter, allowing the filter to be created with a custom capacity if it does not yet exist.',\n    complexity: 'O(log N)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfinsertnx',\n  },\n  'CF EXISTS': {\n    syntax: 'CF.EXISTS {key} {item}',\n    summary: 'Check if an item exists in a Cuckoo Filter.',\n    complexity: 'O(log N)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfexists',\n  },\n  'CF DEL': {\n    syntax: 'CF.DEL {key} {item}',\n    summary: 'Deletes an item once from the filter.',\n    complexity: 'O(log N)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfdel',\n  },\n  'CF COUNT': {\n    syntax: 'CF.COUNT {key} {item}',\n    summary: 'Returns the number of times an item may be in the filter.',\n    complexity: 'O(log N)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfcount',\n  },\n  'CF SCANDUMP': {\n    syntax: 'CF.SCANDUMP {key} {iter}',\n    summary: 'Begins an incremental save of the cuckoo filter.',\n    complexity: 'O(log N)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfscandump',\n  },\n  'CF LOADCHUNK': {\n    syntax: 'CF.LOADCHUNK {key} {iter} {data}',\n    summary: 'Restores a filter previously saved using SCANDUMP.',\n    complexity: 'O(log N)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfloadchunk',\n  },\n  'CF INFO': {\n    syntax: 'CF.INFO {key}',\n    summary: 'Return information about key.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisbloom/Cuckoo_Commands/#cfinfo',\n  },\n  CMS: {\n    syntax: 'CMS.INITBYDIM, CMS.INITBYPROB, CMS.INCRBY, CMS.QUERY, CMS.MERGE, CMS.INFO',\n    summary: 'RedisBloom Count-Min Sketch',\n    url: 'https://oss.redislabs.com/redisbloom/CountMinSketch_Commands/',\n  },\n  'CMS INITBYDIM': {\n    syntax: 'CMS.INITBYDIM key width depth',\n    summary: 'Initializes a Count-Min Sketch to dimensions specified by user.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisbloom/CountMinSketch_Commands/#cmsinitbydim',\n  },\n  'CMS INITBYPROB': {\n    syntax: 'CMS.INITBYPROB key error probability',\n    summary: 'Initializes a Count-Min Sketch to accommodate requested capacity.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisbloom/CountMinSketch_Commands/#cmsinitbyprob',\n  },\n  'CMS INCRBY': {\n    syntax: 'CMS.INCRBY key item increment [item increment ...]',\n    summary: 'Increases the count of item by increment.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisbloom/CountMinSketch_Commands/#cmsincrby',\n  },\n  'CMS QUERY': {\n    syntax: 'CMS.QUERY key item [item ...]',\n    summary: 'Returns count for item. Multiple items can be queried with one call.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisbloom/CountMinSketch_Commands/#cmsquery',\n  },\n  'CMS MERGE': {\n    syntax: 'CMS.MERGE dest numKeys src1 [src2 ...] [WEIGHTS weight1 ...]',\n    summary: 'Merges several sketches into one sketch.',\n    complexity: 'O(n)',\n    url: 'https://oss.redislabs.com/redisbloom/CountMinSketch_Commands/#cmsmerge',\n  },\n  'CMS INFO': {\n    syntax: 'CMS.INFO key',\n    summary: 'Returns width, depth and total count of the sketch.',\n    complexity: 'O(n) due to fill rate percentage',\n    url: 'https://oss.redislabs.com/redisbloom/CountMinSketch_Commands/#cmsinfo',\n  },\n  TOPK: {\n    syntax: 'TOPK.RESERVE, TOPK.ADD, TOPK.INCRBY, TOPK.QUERY, TOPK.COUNT, TOPK.LIST, TOPK.INFO',\n    summary: 'RedisBloom TopK Filter',\n    url: 'https://oss.redislabs.com/redisbloom/TopK_Commands/',\n  },\n  'TOPK RESERVE': {\n    syntax: 'TOPK.RESERVE key topk width depth decay',\n    summary: 'Initializes a TopK with specified parameters.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisbloom/TopK_Commands/#topkreserve',\n  },\n  'TOPK ADD': {\n    syntax: 'TOPK.ADD key item [item ...]',\n    summary: 'Adds an item to the data structure',\n    complexity: 'O(k + depth)',\n    url: 'https://oss.redislabs.com/redisbloom/TopK_Commands/#topkadd',\n  },\n  'TOPK INCRBY': {\n    syntax: 'TOPK.INCRBY key item increment [item increment ...]',\n    summary: 'Increase the score of an item in the data structure by increment.',\n    complexity: 'O(k + (increment * depth))',\n    url: 'https://oss.redislabs.com/redisbloom/TopK_Commands/#topkincrby',\n  },\n  'TOPK QUERY': {\n    syntax: 'TOPK.QUERY key item [item ...]',\n    summary: 'Checks whether an item is one of Top-K items.',\n    complexity: 'O(k)',\n    url: 'https://oss.redislabs.com/redisbloom/TopK_Commands/#topkquery',\n  },\n  'TOPK COUNT': {\n    syntax: 'TOPK.COUNT key item [item ...]',\n    summary: 'Returns count for an item.',\n    complexity: 'O(k + depth)',\n    url: 'https://oss.redislabs.com/redisbloom/TopK_Commands/#topkcount',\n  },\n  'TOPK LIST': {\n    syntax: 'TOPK.LIST key',\n    summary: 'Return full list of items in Top K list.',\n    complexity: 'O(k)',\n    url: 'https://oss.redislabs.com/redisbloom/TopK_Commands/#topklist',\n  },\n  'TOPK INFO': {\n    syntax: 'TOPK.INFO key',\n    summary: 'Returns number of required items (k), width, depth and decay values.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisbloom/TopK_Commands/#topkinfo',\n  },\n};\n","import { HelpCommand } from '../types';\n\n/**\n * RedisGears\n *\n * @see https://oss.redislabs.com/redisgears\n */\nexport const RedisGearsHelp: { [key: string]: HelpCommand } = {\n  RG: {\n    syntax:\n      'RG.ABORTEXECUTION, RG.CONFIGGET, RG.CONFIGSET, RG.DROPEXECUTION, RG.DUMPEXECUTIONS, RG.DUMPREGISTRATIONS, \\\n    RG.GETEXECUTION, RG.GETRESULTS, RG.GETRESULTSBLOCKING, RG.INFOCLUSTER, RG.PYEXECUTE, RG.PYSTATS, RG.PYDUMPREQS, \\\n    RG.REFRESHCLUSTER, RG.TRIGGER, RG.UNREGISTER',\n    summary: 'RedisGears is a serverless engine for transaction, batch and event-driven data processing in Redis.',\n    url: 'https://oss.redislabs.com/redisgears',\n  },\n  'RG ABORTEXECUTION': {\n    syntax: 'RG.ABORTEXECUTION <id>',\n    summary: 'Abort the execution of a function in mid-flight.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgabortexecution',\n  },\n  'RG CONFIGGET': {\n    syntax: 'RG.CONFIGGET <key> [...]',\n    summary: 'Return the value of one or more built-in configuration or a user-defined options.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgconfigget',\n  },\n  'RG CONFIGSET': {\n    syntax: 'RG.CONFIGSET <key> <value> [...]',\n    summary: 'Set the value of one ore more built-in configuration or a user-defined options.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgconfigset',\n  },\n  'RG DROPEXECUTION': {\n    syntax: 'RG.DROPEXECUTION <id>',\n    summary: 'Remove the execution of a function from the executions list.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgdropexecution',\n  },\n  'RG DUMPEXECUTIONS': {\n    syntax: 'RG.DUMPEXECUTIONS',\n    summary:\n      \"Output the list of function executions . The executions list's length is capped by the MaxExecutions configuration option.\",\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgdumpexecutions',\n  },\n  'RG DUMPREGISTRATIONS': {\n    syntax: 'RG.DUMPREGISTRATIONS',\n    summary: 'Output the list of function registrations.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgdumpregistrations',\n  },\n  'RG GETEXECUTION': {\n    syntax: 'RG.GETEXECUTION <id> [SHARD|CLUSTER]',\n    summary: \"Return the execution execution details of a function that's in the executions list.\",\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rggetexecution',\n  },\n  'RG GETRESULTS': {\n    syntax: 'RG.GETRESULTS <id>',\n    summary:\n      \"Return the results and errors from of the execution execution details of a function that's in the executions list.\",\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rggetresults',\n  },\n  'RG GETRESULTSBLOCKING': {\n    syntax: 'RG.GETRESULTSBLOCKING <id>',\n    summary: 'Cancel the UNBLOCKING argument of the RG.PYEXECUTE command.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rggetresultsblocking',\n  },\n  'RG INFOCLUSTER': {\n    syntax: 'RG.INFOCLUSTER',\n    summary: 'Output information about the cluster.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rginfocluster',\n  },\n  'RG PYEXECUTE': {\n    syntax: 'RG.PYEXECUTE \"<function>\" [UNBLOCKING] [REQUIREMENTS \"<dep> ...\"]',\n    summary: 'Execute a Python function.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgpyexecute',\n  },\n  'RG PYSTATS': {\n    syntax: 'RG.PYSTATS',\n    summary: 'Return memory usage statistics from the Python interpreter.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgpystats',\n  },\n  'RG PYDUMPREQS': {\n    syntax: 'RG.PYDUMPREQS',\n    summary: 'Return a list of all the python requirements available (with information about each requirement).',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgpydumpreqs',\n  },\n  'RG REFRESHCLUSTER': {\n    syntax: \"Refresh the node's view of the cluster's topology.\",\n    summary: 'RG.REFRESHCLUSTER',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgrefreshcluster',\n  },\n  'RG TRIGGER': {\n    syntax: 'RG.TRIGGER <trigger> [arg ...]',\n    summary: 'Trigger the execution of a registered CommandReader function.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgtrigger',\n  },\n  'RG UNREGISTER': {\n    syntax: 'RG.UNREGISTER <id>',\n    summary: 'Remove the registration of a function.',\n    url: 'https://oss.redislabs.com/redisgears/commands.html#rgunregister',\n  },\n};\n","import { HelpCommand } from '../types';\n\n/**\n * RedisGraph\n *\n * @see https://oss.redislabs.com/redisgraph/\n */\nexport const RedisGraphHelp: { [key: string]: HelpCommand } = {\n  GRAPH: {\n    syntax: 'GRAPH.QUERY, GRAPH.PROFILE, GRAPH.DELETE, GRAPH.EXPLAIN, GRAPH.SLOWLOG, GRAPH.CONFIG',\n    summary:\n      'RedisGraph is the first queryable Property Graph database to use sparse matrices to represent the \\\n    adjacency matrix in graphs and linear algebra to query the graph.',\n    url: 'https://oss.redislabs.com/redisgraph/',\n  },\n  'GRAPH QUERY': {\n    syntax: 'GRAPH.QUERY <graph name> {query}',\n    summary: 'Executes the given query against a specified graph.',\n    url: 'https://oss.redislabs.com/redisgraph/commands/#graphquery',\n  },\n  'GRAPH PROFILE': {\n    syntax: 'GRAPH.PROFILE <graph name> {query}',\n    summary: \"Executes a query and produces an execution plan augmented with metrics for each operation's execution.\",\n    url: 'https://oss.redislabs.com/redisgraph/commands/#graphprofile',\n  },\n  'GRAPH DELETE': {\n    syntax: 'GRAPH.DELETE <graph name>',\n    summary: 'Completely removes the graph and all of its entities.',\n    url: 'https://oss.redislabs.com/redisgraph/commands/#graphdelete',\n  },\n  'GRAPH EXPLAIN': {\n    syntax: 'GRAPH.EXPLAIN <graph name> {query}',\n    summary:\n      'Constructs a query execution plan but does not run it. Inspect this execution plan to better \\\n    understand how your query will get executed.',\n    url: 'https://oss.redislabs.com/redisgraph/commands/#graphexplain',\n  },\n  'GRAPH SLOWLOG': {\n    syntax: 'GRAPH.SLOWLOG <graph name>',\n    summary: 'Returns a list containing up to 10 of the slowest queries issued against the given graph ID.',\n    url: 'https://oss.redislabs.com/redisgraph/commands/#graphslowlog',\n  },\n  'GRAPH CONFIG': {\n    syntax: 'GRAPH.CONFIG GET/SET <config name> [value] value',\n    summary: 'Retrieves or updates a RedisGraph configuration.',\n    url: 'https://oss.redislabs.com/redisgraph/commands/#graphconfig',\n  },\n};\n","import { HelpCommand } from '../types';\n\n/**\n * RedisJSON\n *\n * @see https://oss.redislabs.com/redisjson/\n */\nexport const RedisJSONHelp: { [key: string]: HelpCommand } = {\n  JSON: {\n    syntax:\n      'JSON.DEL, JSON.GET, JSON.MGET, JSON.SET, JSON.TYPE, JSON.NUMINCRBY, JSON.NUMMULTBY, JSON.STRAPPEND, \\\n    JSON.STRLEN, JSON.ARRAPPEND, JSON.ARRINDEX, JSON.ARRINSERT, JSON.ARRLEN, JSON.ARRPOP, JSON.ARRTRIM, JSON.OBJKEYS, \\\n    JSON.OBJLEN, JSON.DEBUG, JSON.RESP',\n    summary:\n      'RedisJSON is a Redis module that implements ECMA-404 The JSON Data Interchange Standard as a native data type.',\n    url: 'https://oss.redislabs.com/redisjson/',\n  },\n  'JSON DEL': {\n    syntax: 'JSON.DEL <key> [path]',\n    summary: 'Delete a value.',\n    complexity: 'O(N), where N is the size of the deleted value.',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsondel',\n  },\n  'JSON GET': {\n    syntax:\n      'JSON.GET <key> [INDENT indentation-string] [NEWLINE line-break-string] [SPACE space-string] [NOESCAPE] [path ...]',\n    summary: 'Return the value at path in JSON serialized form.',\n    complexity: 'O(N), where N is the size of the value.',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonget',\n  },\n  'JSON MGET': {\n    syntax: 'JSON.MGET <key> [key ...] <path>',\n    summary:\n      'Returns the values at path from multiple key s. Non-existing keys and non-existing paths are reported as null.',\n    complexity: 'O(M*N), where M is the number of keys and N is the size of the value.',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonmget',\n  },\n  'JSON SET': {\n    syntax: 'JSON.SET <key> <path> <json> [NX | XX]',\n    summary: 'Sets the JSON value at path in key.',\n    complexity: 'O(M+N), where M is the size of the original value (if it exists) and N is the size of the new value.',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonset',\n  },\n  'JSON TYPE': {\n    syntax: 'JSON.TYPE <key> [path]',\n    summary: 'Report the type of JSON value at path.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsontype',\n  },\n  'JSON NUMINCRBY': {\n    syntax: 'JSON.NUMINCRBY <key> <path> <number>',\n    summary: 'Increments the number value stored at path by number.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonnumincrby',\n  },\n  'JSON NUMMULTBY': {\n    syntax: 'JSON.NUMMULTBY <key> <path> <number>',\n    summary: 'Multiplies the number value stored at path by number.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonnummultby',\n  },\n  'JSON STRAPPEND': {\n    syntax: 'JSON.STRAPPEND <key> [path] <json-string>',\n    summary: 'Append the json-string value(s) the string at path.',\n    complexity: \"O(N), where N is the new string's length.\",\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonstrappend',\n  },\n  'JSON STRLEN': {\n    syntax: 'JSON.STRLEN <key> [path]',\n    summary: 'Report the length of the JSON String at path in key.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonstrlen',\n  },\n  'JSON ARRAPPEND': {\n    syntax: 'JSON.ARRAPPEND <key> <path> <json> [json ...]',\n    summary: 'Append the json value(s) into the array at path after the last element in it.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonarrappend',\n  },\n  'JSON ARRINDEX': {\n    syntax: 'JSON.ARRINDEX <key> <path> <json-scalar> [start [stop]]',\n    summary: 'Search for the first occurrence of a scalar JSON value in an array.',\n    complexity: \"O(N), where N is the array's size.\",\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonarrindex',\n  },\n  'JSON ARRINSERT': {\n    syntax: 'JSON.ARRINSERT <key> <path> <index> <json> [json ...]',\n    summary: 'Insert the json value(s) into the array at path before the index (shifts to the right).',\n    complexity: \"O(N), where N is the array's size.\",\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonarrinsert',\n  },\n  'JSON ARRLEN': {\n    syntax: 'JSON.ARRLEN <key> [path]',\n    summary: 'Report the length of the JSON Array at path in key.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonarrlen',\n  },\n  'JSON ARRPOP': {\n    syntax: 'JSON.ARRPOP <key> [path [index]]',\n    summary: 'Remove and return element from the index in the array.',\n    complexity: \"O(N), where N is the array's size for index other than the last element, O(1) otherwise.\",\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonarrpop',\n  },\n  'JSON ARRTRIM': {\n    syntax: 'JSON.ARRTRIM <key> <path> <start> <stop>',\n    summary: 'Trim an array so that it contains only the specified inclusive range of elements.',\n    complexity: \"O(N), where N is the array's size.\",\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonarrtrim',\n  },\n  'JSON OBJKEYS': {\n    syntax: 'JSON.OBJKEYS <key> [path]',\n    summary: \"Return the keys in the object that's referenced by path.\",\n    complexity: 'O(N), where N is the number of keys in the object.',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonobjkeys',\n  },\n  'JSON OBJLEN': {\n    syntax: 'JSON.OBJLEN <key> [path]',\n    summary: 'Report the number of keys in the JSON Object at path in key.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonobjlen',\n  },\n  'JSON DEBUG': {\n    syntax: 'JSON.DEBUG <subcommand & arguments>',\n    summary: 'Report information.',\n    complexity: 'O(N), where N is the size of the JSON value.',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsondebug',\n  },\n  'JSON RESP': {\n    syntax: 'JSON.RESP <key> [path]',\n    summary: 'Return the JSON in key in Redis Serialization Protocol (RESP).',\n    complexity: 'O(N), where N is the size of the JSON value.',\n    url: 'https://oss.redislabs.com/redisjson/commands/#jsonresp',\n  },\n};\n","import { HelpCommand } from '../types';\n\n/**\n * RediSearch\n *\n * @see https://oss.redislabs.com/redisearch/\n */\nexport const RedisSearchHelp: { [key: string]: HelpCommand } = {\n  FT: {\n    syntax:\n      'FT.CREATE, FT.SEARCH, FT.AGGREGATE, FT.EXPLAIN, FT.EXPLAINCLI, FT.ALTER, FT.DROPINDEX, FT.ALIASADD, FT.ALIASUPDATE \\\n    FT.ALIASDEL, FT.TAGVALS, FT.SUGADD, FT.SUGGET, FT.SUGDEL, FT.SUGLEN, FT.SYNUPDATE, FT.SYNDUMP, FT.SPELLCHECK, FT.DICTADD, \\\n    FT.DICTDEL, FT.DICTDUMP, FT.INFO, FT.CONFIG',\n    summary: 'RediSearch is a Full-Text and Secondary Index engine over Redis.',\n    url: 'https://oss.redislabs.com/redisearch/',\n  },\n  'FT CREATE': {\n    syntax:\n      'FT.CREATE {index} [ON {structure}] [PREFIX {count} {prefix} [{prefix} ..] [FILTER {filter}] [LANGUAGE {default_lang}] \\\n    [LANGUAGE_FIELD {lang_field}] [SCORE {default_score}] [SCORE_FIELD {score_field}] [PAYLOAD_FIELD {payload_field}] [MAXTEXTFIELDS] \\\n    [TEMPORARY {seconds}] [NOOFFSETS] [NOHL] [NOFIELDS] [NOFREQS] [SKIPINITIALSCAN] [STOPWORDS {num} {stopword} ...] \\\n    SCHEMA {field} [TEXT [NOSTEM] [WEIGHT {weight}] [PHONETIC {matcher}] | NUMERIC | GEO | TAG [SEPARATOR {sep}] ] [SORTABLE][NOINDEX] ...',\n    summary: 'Create an index with the given spec.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftcreate',\n  },\n  'FT SEARCH': {\n    syntax:\n      'FT.SEARCH {index} {query} [NOCONTENT] [VERBATIM] [NOSTOPWORDS] [WITHSCORES] [WITHPAYLOADS] [WITHSORTKEYS] \\\n    [FILTER {numeric_field} {min} {max}] ... [GEOFILTER {geo_field} {lon} {lat} {radius} m|km|mi|ft] \\\n    [INKEYS {num} {key} ... ] [INFIELDS {num} {field} ... ] \\\n    [RETURN {num} {field} ... ] [SUMMARIZE [FIELDS {num} {field} ... ] [FRAGS {num}] [LEN {fragsize}] [SEPARATOR {separator}]] \\\n    [HIGHLIGHT [FIELDS {num} {field} ... ] [TAGS {open} {close}]] [SLOP {slop}] [INORDER] \\\n    [LANGUAGE {language}] [EXPANDER {expander}] [SCORER {scorer}] [EXPLAINSCORE] [PAYLOAD {payload}] [SORTBY {field} [ASC|DESC]] \\\n    [LIMIT offset num]',\n    summary: 'Search the index with a textual query, returning either documents or just ids.',\n    complexity:\n      'O(n) for single word queries. n is the number of the results in the result set. Finding all the documents that \\\n    have a specific term is O(1), however, a scan on all those documents is needed to load the documents data from redis hashes \\\n    and return them.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftsearch',\n  },\n  'FT AGGREGATE': {\n    syntax:\n      'FT.AGGREGATE {index_name} {query_string} [VERBATIM] \\\n    [LOAD {nargs} {property} ...] [GROUPBY {nargs} {property} ... \\\n      REDUCE {func} {nargs} {arg} ... [AS {name:string}] ... ] ... \\\n    [SORTBY {nargs} {property} [ASC|DESC] ... [MAX {num}]] [APPLY {expr} AS {alias}] ... \\\n    [LIMIT {offset} {num}] ... [FILTER {expr}] ...',\n    summary:\n      'Run a search query on an index, and performs aggregate transformations on the results, extracting statistics etc from them.',\n    complexity:\n      'Non-deterministic. Depends on the query and aggregations performed, but it is usually linear to the number \\\n    of results returned.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftaggregate',\n  },\n  'FT EXPLAIN': {\n    syntax: 'FT.EXPLAIN {index} {query}',\n    summary: 'Return the execution plan for a complex query.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftexplain',\n  },\n  'FT EXPLAINCLI': {\n    syntax: 'FT.EXPLAINCLI {index} {query}',\n    summary: 'Return the execution plan for a complex query but formatted for easier reading',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftexplaincli',\n  },\n  'FT ALTER': {\n    syntax: 'FT.ALTER {index} SCHEMA ADD {field} {options} ...',\n    summary: 'Add a new field to the index.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftalter_schema_add',\n  },\n  'FT DROPINDEX': {\n    syntax: 'FT.DROPINDEX {index} [DD]',\n    summary: 'Delete the index.',\n    since: 'RediSearch 2.0',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftdropindex',\n  },\n  'FT ALIASADD': {\n    syntax: 'FT.ALIASADD {name} {index}',\n    summary: 'Add an alias from an index.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftaliasadd',\n  },\n  'FT ALIASUPDATE': {\n    syntax: 'FT.ALIASUPDATE {name} {index}',\n    summary:\n      'The FT.ALIASUPDATE command differs from the FT.ALIASADD command in that it will remove the alias association \\\n    with a previous index, if any. FT.ALIASDD will fail, on the other hand, if the alias is already associated with another index.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftaliasupdate',\n  },\n  'FT ALIASDEL': {\n    syntax: 'FT.ALIASDEL {name}',\n    summary: 'Remove an alias from an index.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftaliasdel',\n  },\n  'FT TAGVALS': {\n    syntax: 'FT.TAGVALS {index} {field_name}',\n    summary: 'Return the distinct tags indexed in a Tag field.',\n    complexity: 'O(n), n being the cardinality of the tag field.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#fttagvals',\n  },\n  'FT SUGADD': {\n    syntax: 'FT.SUGADD {key} {string} {score} [INCR] [PAYLOAD {payload}]',\n    summary:\n      'Add a suggestion string to an auto-complete suggestion dictionary. This is disconnected from the index definitions, \\\n    and leaves creating and updating suggestions dictionaries to the user.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftsugadd',\n  },\n  'FT SUGGET': {\n    syntax: 'FT.SUGGET {key} {prefix} [FUZZY] [WITHSCORES] [WITHPAYLOADS] [MAX num]',\n    summary: 'Get completion suggestions for a prefix.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftsugget',\n  },\n  'FT SUGDEL': {\n    syntax: 'FT.SUGDEL {key} {string}',\n    summary: 'Delete a string from a suggestion index.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftsugdel',\n  },\n  'FT SUGLEN': {\n    syntax: 'FT.SUGLEN {key}',\n    summary: 'Get the size of an auto-complete suggestion dictionary.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftsuglen',\n  },\n  'FT SYNUPDATE': {\n    syntax: 'FT.SYNUPDATE <index name> <synonym group id> [SKIPINITIALSCAN] <term1> <term2> ...',\n    summary: 'Update a synonym group.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftsynupdate',\n  },\n  'FT SYNDUMP': {\n    syntax: 'FT.SYNDUMP <index name>',\n    summary: 'Dump the contents of a synonym group.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftsyndump',\n  },\n  'FT SPELLCHECK': {\n    syntax: 'FT.SPELLCHECK {index} {query} [DISTANCE dist] [TERMS {INCLUDE | EXCLUDE} {dict} [TERMS ...]]',\n    summary: 'Performs spelling correction on a query, returning suggestions for misspelled terms.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftspellcheck',\n  },\n  'FT DICTADD': {\n    syntax: 'FT.DICTADD {dict} {term} [{term} ...]',\n    summary: 'Add terms to a dictionary.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftdictadd',\n  },\n  'FT DICTDEL': {\n    syntax: 'FT.DICTDEL {dict} {term} [{term} ...]',\n    summary: 'Delete terms from a dictionary.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftdictdel',\n  },\n  'FT DICTDUMP': {\n    syntax: 'FT.DICTDUMP {dict}',\n    summary: 'Dump all terms in the given dictionary.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftdictdump',\n  },\n  'FT INFO': {\n    syntax: 'FT.INFO {index}',\n    summary: 'Return information and statistics on the index.',\n    complexity: 'O(n), n being the cardinality of the tag field.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftinfo',\n  },\n  'FT CONFIG': {\n    syntax: 'FT.CONFIG <GET|HELP> {option}, FT.CONFIG SET {option} {value}',\n    summary: 'Retrieves, describes and sets runtime configuration options.',\n    url: 'https://oss.redislabs.com/redisearch/Commands/#ftconfig',\n  },\n};\n","import { HelpCommand } from '../types';\n\n/**\n * RedisTimeSeries\n *\n * @see https://oss.redislabs.com/redistimeseries/\n */\nexport const RedisTimeSeriesHelp: { [key: string]: HelpCommand } = {\n  TS: {\n    syntax:\n      'TS.CREATE, TS.ALTER, TS.ADD, TS.MADD, TS.INCRBY, TS.DECRBY, TS.CREATERULE, TS.DELETERULE, TS.RANGE, TS.REVRANGE, \\\n    TS.MRANGE, TS.MREVRANGE, TS.GET, TS.MGET, TS.INFO, TS.QUERYINDEX',\n    summary: 'RedisTimeSeries is a Redis Module adding a Time Series data structure to Redis.',\n    url: 'https://oss.redislabs.com/redistimeseries/',\n  },\n  'TS CREATE': {\n    syntax: 'TS.CREATE key [RETENTION retentionTime] [UNCOMPRESSED] [CHUNK_SIZE size] [LABELS label value..]',\n    summary: 'Create a new time-series.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tscreate',\n  },\n  'TS ALTER': {\n    syntax: 'TS.ALTER key [RETENTION retentionTime] [LABELS label value..]',\n    summary: 'Update the retention, labels of an existing key. The parameters are the same as TS.CREATE.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsalter',\n  },\n  'TS ADD': {\n    syntax:\n      'TS.ADD key timestamp value [RETENTION retentionTime] [UNCOMPRESSED] [CHUNK_SIZE size] [ON_DUPLICATE policy] [LABELS label value..]',\n    summary: 'Append (or create and append) a new sample to the series.',\n    complexity:\n      'If a compaction rule exits on a timeseries, TS.ADD performance might be reduced. The complexity of TS.ADD is \\\n    always O(M) when M is the amount of compaction rules or O(1) with no compaction.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsadd',\n  },\n  'TS MADD': {\n    syntax: 'TS.MADD key timestamp value [key timestamp value ...]',\n    summary: 'Append new samples to a list of series.',\n    complexity:\n      'If a compaction rule exits on a timeseries, TS.MADD performance might be reduced. The complexity of TS.MADD is \\\n      always O(N*M) when N is the amount of series updated and M is the amount of compaction rules or O(N) with no compaction.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsmadd',\n  },\n  'TS INCRBY': {\n    syntax:\n      'TS.INCRBY key value [TIMESTAMP timestamp] [RETENTION retentionTime] [UNCOMPRESSED] [CHUNK_SIZE size] [LABELS label value..]',\n    summary: \"Create a new sample that increments the latest sample's value.\",\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsincrbytsdecrby',\n  },\n  'TS DECRBY': {\n    syntax:\n      'TS.DECRBY key value [TIMESTAMP timestamp] [RETENTION retentionTime] [UNCOMPRESSED] [CHUNK_SIZE size] [LABELS label value..]',\n    summary: \"Create a new sample that decrements the latest sample's value.\",\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsincrbytsdecrby',\n  },\n  'TS CREATERULE': {\n    syntax: 'TS.CREATERULE sourceKey destKey AGGREGATION aggregationType timeBucket',\n    summary: 'Create a compaction rule.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tscreaterule',\n  },\n  'TS DELETERULE': {\n    syntax: 'TS.DELETERULE sourceKey destKey',\n    summary: 'Delete a compaction rule.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsdeleterule',\n  },\n  'TS RANGE': {\n    syntax: 'TS.RANGE key fromTimestamp toTimestamp [COUNT count] [AGGREGATION aggregationType timeBucket]',\n    summary: 'Query a range in forward direction.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsrangetsrevrange',\n  },\n  'TS REVRANGE': {\n    syntax: 'TS.REVRANGE key fromTimestamp toTimestamp [COUNT count] [AGGREGATION aggregationType timeBucket]',\n    summary: 'Query a range in reverse direction.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsrangetsrevrange',\n  },\n  'TS MRANGE': {\n    syntax:\n      'TS.MRANGE fromTimestamp toTimestamp [COUNT count] [AGGREGATION aggregationType timeBucket] [WITHLABELS] FILTER filter..',\n    summary: 'Query a range across multiple time-series by filters in forward direction.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsmrangetsmrevrange',\n  },\n  'TS MREVRANGE': {\n    syntax:\n      'TS.MREVRANGE fromTimestamp toTimestamp [COUNT count] [AGGREGATION aggregationType timeBucket] [WITHLABELS] FILTER filter..',\n    summary: 'Query a range across multiple time-series by filters in reverse direction.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsmrangetsmrevrange',\n  },\n  'TS GET': {\n    syntax: 'TS.GET key',\n    summary: 'Get the last sample.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsget',\n  },\n  'TS MGET': {\n    syntax: 'TS.MGET [WITHLABELS] FILTER filter...',\n    summary: 'Get the last samples matching the specific filter.',\n    complexity: 'O(N), where N is a number of time-series that match the filters.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsmget',\n  },\n  'TS INFO': {\n    syntax: 'TS.INFO key',\n    summary: 'Return information and statistics on the time-series.',\n    complexity: 'O(1)',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsinfo',\n  },\n  'TS QUERYINDEX': {\n    syntax: 'TS.QUERYINDEX filter...',\n    summary: 'Get all the keys matching the filter list.',\n    url: 'https://oss.redislabs.com/redistimeseries/commands/#tsqueryindex',\n  },\n};\n","import { PanelPlugin } from '@grafana/data';\nimport { RedisCLIPanel } from './components';\nimport { PanelOptions } from './types';\n\n/**\n * Panel Plugin\n */\nexport const plugin = new PanelPlugin<PanelOptions>(RedisCLIPanel);\n","import React, { ChangeEvent } from 'react';\nimport { lastValueFrom, Observable } from 'rxjs';\nimport { css, cx } from '@emotion/css';\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataQueryResponseData,\n  DataSourceRef,\n  Field,\n  PanelProps,\n} from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { Button, RadioButtonGroup, useTheme2 } from '@grafana/ui';\nimport { RedisDataSourceOptions, RedisQuery } from '../../../types';\nimport { Help, ResponseMode, ResponseModeOptions } from '../../constants';\nimport { Styles } from '../../styles';\nimport { HelpCommand, PanelOptions } from '../../types';\nimport { CLITextArea } from '../AutoScrollingTextArea';\n\n/**\n * Redis CLI Panel\n */\nexport const RedisCLIPanel: React.FC<PanelProps<PanelOptions>> = ({\n  options,\n  data,\n  width,\n  height,\n  onOptionsChange,\n  replaceVariables,\n}) => {\n  const { query, output, help } = options;\n  const styles = Styles(useTheme2());\n\n  /**\n   * Get configured Data Source Id\n   */\n  const targets = data.request?.targets;\n  let datasource: string | DataSourceRef = '';\n  if (targets && targets.length && targets[0].datasource) {\n    datasource = targets[0].datasource;\n  }\n\n  /**\n   * Run Query\n   *\n   * @param event {any} Event\n   */\n  const runQuery = async (event: any) => {\n    /**\n     * Return if not Enter or no query\n     */\n    if (event.key !== 'Enter' || !query) {\n      return;\n    }\n\n    /**\n     * Check Data Source\n     */\n    if (!datasource) {\n      return onOptionsChange({ ...options, output: 'Unknown Data Source' });\n    }\n\n    // Response Error\n    let error = '';\n\n    /**\n     * Run Query\n     */\n    const ds = await getDataSourceSrv().get(datasource);\n    const dsQuery = ds.query({\n      targets: [{ refId: 'A', query: replaceVariables(query), cli: !options.raw }],\n    } as DataQueryRequest<RedisQuery>) as unknown;\n    const q = lastValueFrom(dsQuery as Observable<DataQueryResponse>);\n\n    /**\n     * Get Results\n     */\n    const results: string[] = [];\n    await q\n      .then((response: DataQueryResponse) => {\n        /**\n         * Check for error in response\n         */\n        if (response.error && response.error.message) {\n          error = response.error.message;\n        }\n\n        return response.data;\n      })\n      .then((data: DataQueryResponseData[]) =>\n        data.forEach((item: DataQueryResponseData) => {\n          item.fields.forEach((field: Field) => {\n            field.values.toArray().map((value) => {\n              results.push(value);\n            });\n          });\n        })\n      );\n\n    /**\n     * Show Output\n     */\n    let result = `${ds.name}> ${query}\\n`;\n    if (results.length) {\n      result += results.join('\\n');\n    } else if (error) {\n      result += `(error) ${error}\\n`;\n    } else {\n      result += 'ERROR';\n    }\n\n    /**\n     * Update Output and clear Query\n     */\n    onOptionsChange({ ...options, output: `${output ? `${output}\\n` : ''}${result}`, query: '' });\n  };\n\n  /**\n   * Change view mode\n   * @param event\n   */\n  const onChangeResponseMode = (event?: ResponseMode) => {\n    if (event === undefined) {\n      return;\n    }\n\n    onOptionsChange({\n      ...options,\n      raw: event === ResponseMode.RAW ? true : false,\n    });\n  };\n\n  /**\n   * Run Query\n   *\n   * @param event {ChangeEvent<HTMLInputElement>} Event\n   */\n  const onQueryChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    const query = event.target.value.toUpperCase();\n    const q = query?.split(/[\\s+\\.]/);\n    let help: HelpCommand = {};\n\n    /**\n     * Parse first and second parameter\n     */\n    if (q[0] && q[1] && Help[`${q[0]} ${q[1]}`]) {\n      help = Help[`${q[0]} ${q[1]}`];\n    } else if (q[0]) {\n      help = Help[q[0]];\n    }\n\n    /**\n     * Update query and help\n     */\n    onOptionsChange({ ...options, query: event.target.value, help });\n  };\n\n  /**\n   * Check if CLI disabled\n   */\n  const jsonData = getDataSourceSrv().getInstanceSettings(datasource)?.jsonData as RedisDataSourceOptions;\n  const cliDisabled = jsonData?.cliDisabled;\n\n  /**\n   * CLI disabled\n   */\n  if (cliDisabled) {\n    return (\n      <div\n        className={cx(\n          styles.wrapper,\n          css`\n            width: ${width}px;\n            height: ${height}px;\n          `\n        )}\n      >\n        CLI is disabled for this Data Source.\n      </div>\n    );\n  }\n\n  /**\n   * Return\n   */\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <div className={cx('gf-form', styles.form)}>\n        <CLITextArea className={cx(styles.textarea)} value={output} />\n      </div>\n\n      {query && help && (\n        <div className={cx(styles.help)} id=\"help\">\n          {help.danger && (\n            <h3 id=\"help-danger\" className={cx(styles.danger)}>\n              {help.danger}\n            </h3>\n          )}\n          {help.warning && (\n            <h3 id=\"help-warning\" className={cx(styles.warning)}>\n              {help.warning}\n            </h3>\n          )}\n\n          <h4 id=\"help-syntax\">{help.syntax}</h4>\n          <div id=\"help-summary\">{help.summary}</div>\n\n          <hr />\n          {help.complexity && (\n            <div id=\"help-complexity\">\n              <b>Time complexity:</b> {help.complexity}\n            </div>\n          )}\n\n          {help.since && (\n            <div id=\"help-since\">\n              <b>Since:</b> {help.since}\n            </div>\n          )}\n\n          <div id=\"help-url\" className={cx(styles.url)}>\n            <a target=\"_blank\" rel=\"noreferrer\" href={help.url}>\n              {help.url}\n            </a>\n          </div>\n        </div>\n      )}\n\n      <div className=\"gf-form\">\n        <span className=\"gf-form-label width-10\">Command</span>\n        <input\n          name=\"query\"\n          placeholder=\"PING\"\n          className=\"gf-form-input\"\n          onChange={onQueryChange}\n          onKeyPress={runQuery}\n          value={query}\n        />\n\n        <RadioButtonGroup\n          className={cx(styles.cli)}\n          value={options.raw ? ResponseMode.RAW : ResponseMode.CLI}\n          options={ResponseModeOptions}\n          onChange={onChangeResponseMode}\n        />\n\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            onOptionsChange({ ...options, output: '' });\n          }}\n        >\n          Clear\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\n\n/**\n * Styles\n */\nexport const Styles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      position: relative;\n      min-height: 100px;\n    `,\n    textarea: css`\n      font-family: Consolas, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono,\n        Courier New, monospace;\n      height: 100%;\n    `,\n    form: css`\n      height: calc(100% - 40px);\n    `,\n    help: css`\n      position: absolute;\n      bottom: 80px;\n      left: 10px;\n      width: calc(100% - 22px);\n      min-height: 124px;\n      padding: 16px;\n      border-radius: 5px;\n      -webkit-box-flex: 1;\n      flex-grow: 1;\n      box-shadow: 1px 1px 5px 3px grey;\n      background-color: ${theme.isLight ? '#ffffff' : '#000000'};\n    `,\n    warning: css`\n      color: #9f6000;\n      background-color: #feefb3;\n    `,\n    danger: css`\n      color: #d8000c;\n      background-color: #ffd2d2;\n    `,\n    url: css`\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      margin-right: 12px;\n    `,\n    cli: css`\n      margin-right: 4px;\n    `,\n  };\n};\n"],"sourceRoot":""}