version: '3.9'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
     - "9090:9090"
    # expose:
    #    - "9090"
    networks:
      - monitor-net


  nodeexporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    # ports:
    #  - "9101:9100"
    expose:
       - "9100"
    networks:
      - monitor-net


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./Redis:/var/lib/grafana/plugins
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
     - "3000:3000"
    # expose:
    #    - "3000"
    user: "0"
    command: >
      bash -c '
      grafana-cli plugins install redis-datasource 
      '
    networks:
      - monitor-net


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80" 
      - "8080:8080"
    # expose:
    #   # - "80"
    #   - "8080"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - monitor-net

  nginxexporter:
    image: nginx/nginx-prometheus-exporter:latest 
    container_name: nginx-exporter
    # ports: 
    #   - "9114:9113"
    expose:
       - "9113"
    command:
      - -nginx.scrape-uri
      - http://nginx:8080/stub_status
    networks:
      - monitor-net

  redis:
     image: redis
     container_name: redis
     ports:
     - 6379:6379
    #  expose:
    #    - "6379"  
     networks:
       - monitor-net 

  redisexporter:
      image: oliver006/redis_exporter
      container_name: redisexporter
      command: -redis.addr redis://redis:6379
      # ports:
      # - 9121:9121
      expose:
        - "9121"    
      networks:
       - monitor-net


# docker-compose up -d
# Grafana Settings --> Datasource --> Add Datasource --> Search Redis --> Address: redis://ip.6379 --> Save & Test
